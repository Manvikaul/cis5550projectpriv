qirqgoamhgfocekmjcdggahogmzixqeqxmnqcevs page 155005 
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
<link rel="icon" href="//staticg.sportskeeda.com/skm/assets/pfn/favicon.png" type="image/png" />
<link rel="icon" sizes="192x192" href="//staticg.sportskeeda.com/skm/assets/pfn/favicon.png" />
<link rel="shortcut" href="//staticg.sportskeeda.com/skm/assets/pfn/favicon.ico" type="image/x-icon" />
<link rel="shortcut icon" href="//staticg.sportskeeda.com/skm/assets/pfn/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon-precomposed" href="//staticg.sportskeeda.com/skm/assets/pfn/favicon.png" sizes="196x196" />
<meta name="description" content="Here is the complete 2023 NFL schedule, including dates, times, and channels for the upcoming NFL season." />
<meta name="robots" content="index, follow" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>2023 NFL Schedule: Complete Weekly NFL Schedule With Dates, Times, and TV Channels</title>
<style>
*,
*::after,
*::before {
box-sizing: border-box;
}
body,
button,
input,
select {
font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Liberation Sans, sans-serif;
}
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
main,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
margin: 0;
padding: 0;
border: 0;
vertical-align: baseline;
}
iframe {
position: relative;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
display: block;
}
ol,
ul {
list-style: none;
}
q,
blockquote {
quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
content: "";
content: none;
}
a:hover,
a:active {
outline: none;
}
table {
border-collapse: collapse;
border-spacing: 0;
width: 100% !important;
}
html,
body {
width: 100%;
margin: 0;
padding: 0;
border: none;
position: relative;
}
.hidden {
display: none !important;
}
button {
cursor: pointer;
}
.sk-ads-video-player-container {
top: 100px;
position: relative;
}
</style>
<script>
var scriptsLoadedMap = {};
function asyncScriptLoader(input) {
var src = input.src;
var attachTo = input.attachTo;
var loadWithAsync = input.loadWithAsync;
var loadWithDefer = input.loadWithDefer;
var attributes = input.attributes || {};
var onUserInteraction = input.onUserInteraction || false;
if("id" in attributes) {
if(!!scriptsLoadedMap[attributes.id]) {
return Promise.resolve();
}
scriptsLoadedMap[attributes.id] = true;
}
return new Promise(function(resolve, reject) {
var script = document.createElement("script");
script.src = src;
script.onload = resolve;
script.onerror = reject;
if (loadWithAsync) {
script.setAttribute("async", true);
}
if (loadWithDefer) {
script.setAttribute("defer", true);
}
if (attributes && attributes.length > 0) {
attributes.forEach(function(attribute) {
script.setAttribute(attribute.key, attribute.value);
});
}
function loadScript() {
if (attachTo) {
attachTo.appendChild(script);
} else {
document.head.appendChild(script);
}
}
var scriptLoaded = false;
function loadScriptOnInteraction() {
if (scriptLoaded) return;
scriptLoaded = true;
/** Startegy to avoid main thread blocking with a timeout of 2s. To avoid high INP
* ref: https://web.dev/articles/optimize-long-tasks#manually_defer_code_execution
*/
if (typeof requestIdleCallback === "function") {
requestIdleCallback(loadScript, {
timeout: 2000,
});
} else {
loadScript();
}
document.removeEventListener("scroll", loadScriptOnInteraction);
document.removeEventListener("mousemove", loadScriptOnInteraction);
document.removeEventListener("touchmove", loadScriptOnInteraction);
}
if (onUserInteraction) {
document.addEventListener("scroll", loadScriptOnInteraction, { once: true, passive: true });
document.addEventListener("mousemove", loadScriptOnInteraction, { once: true, passive: true });
document.addEventListener("touchmove", loadScriptOnInteraction, { once: true, passive: true });
} else {
/** Startegy to avoid main thread blocking with a timeout of 2s. To avoid high INP
* ref: https://web.dev/articles/optimize-long-tasks#manually_defer_code_execution
*/
if (typeof requestIdleCallback === "function") {
requestIdleCallback(loadScript, {
timeout: 2000,
});
} else {
loadScript();
}
}
});
}
function loadCSSFiles(url, cssId) {
if(!!scriptsLoadedMap[cssId]) {
return;
}
scriptsLoadedMap[cssId] = true;
var head  = document.getElementsByTagName('head')[0];
var link  = document.createElement('link');
link.id   = cssId;
link.rel  = 'stylesheet';
link.type = 'text/css';
link.href = url;
link.media = 'all';
head.appendChild(link);
}
function createStyleTagWithContent(cssText, cssId) {
if(!!scriptsLoadedMap[cssId]) {
return;
}
scriptsLoadedMap[cssId] = true;
var style = document.createElement('style');
style.type = 'text/css';
if (style.styleSheet){
// This is required for IE8 and below.
style.styleSheet.cssText = cssText;
} else {
style.appendChild(document.createTextNode(cssText));
}
document.head.appendChild(style);
}
function deepCopy(o) {
var out, v, key;
out = Array.isArray(o) ? [] : {};
for (key in o) {
v = o[key];
out[key] = (typeof v === "object" && v !== null) ? deepCopy(v) : v;
}
return out;
}
</script>
<script>
var $ = document.querySelector.bind(document);
var $all = document.querySelectorAll.bind(document);
var $id = document.getElementById.bind(document);
function getCookie(cname) {
var name = cname + "=";
var ca = document.cookie.split(';');
for (var i = 0; i < ca.length; i++) {
var c = ca[i].trim();
if (c.indexOf(name) === 0) {
return c.substring(name.length, c.length).trim();
}
}
return "";
}
function pureJSAjaxGet(url, successCallback, errorCallback, credentials) {
var xmlHttp = new XMLHttpRequest();
xmlHttp.withCredentials = credentials;
xmlHttp.onreadystatechange = function() {
if (xmlHttp.readyState == XMLHttpRequest.DONE) {
if (xmlHttp.status == 200) {
successCallback(xmlHttp.responseText);
} else {
console.log('Error: ' + xmlHttp);
errorCallback(xmlHttp.statusText, xmlHttp.status);
}
}
};
xmlHttp.open("GET", url);
xmlHttp.send(null);
}
function pureJSAjaxGetWithPromise(url) {
return new Promise(function(resolve, reject) {
pureJSAjaxGet(url, function(res) {
resolve(res);
}, function(err) {
reject(err);
}, true);
})
}
function pureJSAjaxPostWithData(url, data, successCallBack, error_callback, withCredentials) {
var xmlhttp = new XMLHttpRequest();
if (withCredentials === true) xmlhttp.withCredentials = true;
xmlhttp.open("POST", url, true);
xmlhttp.setRequestHeader("Content-type", "application/json");
xmlhttp.onreadystatechange = function() {
if (xmlhttp.readyState == XMLHttpRequest.DONE) {
if (xmlhttp.status == 200) {
successCallBack(xmlhttp.responseText);
} else {
if (typeof(error_callback) !== "undefined") {
error_callback(xmlhttp.statusText, xmlhttp.status);
}
}
}
};
xmlhttp.send(data);
}
function addClass(ele, cls) {
if (!ele || !ele.classList) return;
return ele.classList.add(cls);
}
function removeClass(ele, cls) {
if (!ele || !ele.classList) return;
return ele.classList.remove(cls);
}
function hasClass(ele, cls) {
if (!ele || !ele.classList) return false;
return ele.classList.contains(cls);
}
var trackGAEvent = function() {
}
var getCurrentUserID = function() {
}
var getCookie = function() {
}
var setLocalStorageData = function(key, value) {
localStorage.setItem(key, value);
}
var getLocalStorageData = function(key) {
var item = localStorage.getItem(key);
return item != null ? item : "";
}
var notifyWhenInViewport = (function() {
var trackedElement = {};
var registeredCallbacks = {};
var firedTimers = {};
var SECONDS_TO_REMAIN_IN_VP = 1;
var observer = new IntersectionObserver(function(entries) {
entries.forEach(function(entry) {
if (!entry.target) return;
var identifier = entry.target.dataset["impId"];
if (!identifier) return;
if (!entry.isIntersecting || entry.intersectionRatio < 0.5) {
var timer = firedTimers[identifier];
if (timer) {
clearTimeout(timer);
trackedElement[identifier] = false;
}
return;
}
if (trackedElement[identifier]) return;
trackedElement[identifier] = true;
var callback = registeredCallbacks[identifier];
if (typeof callback == "function") {
firedTimers[identifier] = setTimeout(function() {
observer.unobserve(entry.target);
callback(entry.target);
}, SECONDS_TO_REMAIN_IN_VP * 1000);
}
});
}, {
threshold: 0.5
});
return function(element, identifier, callback) {
if (!element) return;
if (!identifier) return;
if (!callback) return;
if (trackedElement[identifier]) return;
element.setAttribute("data-imp-id", identifier);
registeredCallbacks[identifier] = callback;
observer.observe(element);
}
})();
var trackImpressionGAEventWhenInViewport = function(input) {
var element = input.element;
var identifier = input.identifier;
var eventName = input.eventName;
var eventParams = input.eventParams;
var delegateGAEvent = input.delegateGAEvent;
return notifyWhenInViewport(element, identifier, function() {
if (typeof delegateGAEvent == "function") {
delegateGAEvent(eventName, eventParams);
}
});
}
function getTimeDiffInDaysHoursMinutes(timeInMilliseconds) {
var diffDays = Math.floor(timeInMilliseconds / 86400000); // difference in days
var diffHrs = Math.floor((timeInMilliseconds % 86400000) / 3600000); // difference in hours
var diffMins = Math.round(((timeInMilliseconds % 86400000) % 3600000) / 60000); // difference in minutes
var result = [];
if (diffDays) {
if (diffDays == 1) {
result.push(diffDays + " day");
} else {
result.push(diffDays + " days");
}
}
if (diffHrs) {
result.push(diffHrs + "hr");
}
if (diffMins) {
result.push(diffMins + "min");
}
if (!result.length) {
result.push(Math.round(timeInMilliseconds / 1000) + "sec");
}
return result;
}
function debounce(func, duration) {
var timeout;
return function(...args) {
var effect = function effect() {
timeout = null;
return func.apply(this, args);
};
clearTimeout(timeout);
timeout = setTimeout(effect, duration);
};
}
function throttleFn(func, delay) {
var prev = 0;
return function() {
var context = this,
args = arguments;
let now = new Date().getTime();
if (now - prev > delay) {
prev = now;
return func.apply(context, args);
}
}
}
function getShortMonthNames() {
return ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
}
function getShortDayNames() {
return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
}
</script>
<script>
(function() {
window.adthrive = window.adthrive || {};
window.adthrive.cmd = window.adthrive.cmd || [];
window.adthrive.plugin = 'adthrive-ads-manual';
window.adthrive.host = 'ads.adthrive.com';
asyncScriptLoader({
src: 'https://ads.adthrive.com/sites/5e163f2211916d4860b8f332/ads.min.js?referrer=' + window
.encodeURIComponent(window.location.href) + '&cb=' + (Math.floor(Math.random() * 100) + 1),
onUserInteraction: true,
loadWithDefer: true,
});
})();
</script>
<script type="text/javascript">
window._taboola = window._taboola || [];
_taboola.push({
'article': 'auto'
});
! function(e, f, u, i) {
if (!document.getElementById(i)) {
e.async = 1;
e.src = u;
e.id = i;
f.parentNode.insertBefore(e, f);
}
}(document.createElement('script'),
document.getElementsByTagName('script')[0],
'//cdn.taboola.com/libtrc/profootballnetwork1-profootballnetwork/loader.js',
'tb_loader_script');
if (window.performance && typeof window.performance.mark == 'function') {
window.performance.mark('tbl_ic');
}
</script>
<script>
(function() {
window.clarity = window.clarity || function() {
window.clarity.q = window.clarity.q || [];
window.clarity.q.push(arguments);
}
window.clarity.q = window.clarity.q || [];
asyncScriptLoader({
src: "https://www.clarity.ms/tag/jd0t8qbgqn",
onUserInteraction: true,
loadWithDefer: true,
});
})();
</script>
</head>
<body class="pfn-nfl-shared">
<main class="sk-proxied-page">
<style>
@font-face {
font-style: normal;
font-weight: normal;
font-family: "Roboto"; src: url("//staticg.sportskeeda.com/assets/fonts/roboto-regular-400.woff2") format("woff2");
font-display: swap;
}
@font-face {
font-style: normal;
font-weight: 500;
font-family: "Roboto"; src: url("//staticg.sportskeeda.com/assets/fonts/roboto-medium-500.woff2") format("woff2");
font-display: swap;
}
body,
button,
input,
select {
font-family: 'Roboto', -apple-system, BlinkMacSystemFont, Segoe UI, Liberation Sans, sans-serif;
}
.pfn-content-container .glossary-container {
--background: #F6F8FD;
--border-color: #0857C3;
--border-radius: 4px;
}
.pfn-content-container {
width: 100%;
display: flex;
gap: 20px;
justify-content: center;
align-items: flex-start;
margin-top: 145px;
}
.pfn-content-container .content {
display: flex;
flex-direction: column;
gap: 16px;
z-index: 2;
width: 720px;
}
.pfn-content-container .content.full-width {
width: 1110px;
}
.pfn-content-container .calculator-container .calculator-content {
border: 1px solid #0857C3;
background: #f5f9ff;
}
.pfn-content-container .right-sidebar-container {
width: 100%;
}
.pfn-content-container .right-sidebar-container .tool-widget-container {
padding: 20px 12px;
}
@media (min-width: 769px) {
.pfn-content-container .right-sidebar-container {
width: 360px;
border: 1px solid #E9E9E9;
}
.pfn-content-container .right-sidebar {
width: 360px;
min-height: 600px;
}
.pfn-content-container .ad-content {
display: none;
}
.pfn-nfl-shared .more-teams-list .more-team-body {
width: 650px;
}
}
.sticky-ad-container {
width: 100%;
height: 95px;
min-height: 55px;
position: fixed;
display: block;
bottom: 0;
z-index: 1;
}
.calculator-content,
.pfn-text-content-container {
border: 1px solid #E9E9E9;
padding: 20px;
}
.pfn-text-content-container p {
font-weight: 400;
font-size: 16px;
line-height: 27px;
color: #666666;
margin-top: 12px;
}
h2:not(:first-child) {
margin-top: 20px;
}
.pfn-content-container .parlay-calculator,
.pfn-content-container .odds-calculator,
.pfn-text-content-container {
width: 100%;
}
.pfn-content-container .calculator-container {
border: 1px solid #E9E9E9;
border-radius: unset;
background-color: #fff;
}
.pfn-content-container .calculator-content .calculator-input-group .calculator-input--label .calculator-input--label-text {
font-weight: 500;
line-height: 16px;
}
.pfn-content-container .calculator-content .calculator-input-group .calculator-input--field input {
border: 1px solid #D8E9FF;
line-height: 16px;
font-weight: 400;
}
.pfn-content-container .calculator-content .calculator-form--reset-button {
background: #0857C3;
font-weight: 500;
}
.pfn-content-container .calculator-content button.calculator-input--add-button {
border: 1px solid #0857C3;
color: #0857C3;
border-radius: 28px;
background: #E9F1FD;
line-height: 16px;
font-weight: 400;
}
.pfn-content-container .calculator-footer-content {
background: #fff;
}
.pfn-content-container .calculator-footer-content .calculator-input--field {
border: 1px solid #2D2D2D;
border-radius: 4px;
}
.pfn-text-content-container {
margin-bottom: 150px;
}
.pfn-text-content-container {
font-family: 'Roboto', -apple-system, BlinkMacSystemFont, Segoe UI, Liberation Sans, sans-serif;
}
.pfn-text-content-container h2 {
font-weight: 500;
font-size: 24px;
line-height: 29px;
margin-bottom: 10px;
}
.pfn-text-content-container h3 {
line-height: 29px;
margin-top: 10px;
}
.pfn-text-content-container ul {
padding-left: 20px;
list-style: disc;
}
.pfn-text-content-container ul li,
.pfn-text-content-container ol li {
margin-left: 20px;
font-weight: 400;
font-size: 16px;
line-height: 27px;
color: #666666;
}
.pfn-text-content-container ol li {
margin-left: 35px;
list-style-type: auto;
}
.pfn-text-content-container ul li ul {
list-style: circle;
}
.pfn-text-content-container h2 {
margin-bottom: 10px;
}
.pfn-nfl-shared .pfn-content-container {
margin-bottom: 104px;
}
.pfn-nfl-shared main div h1 {
color: #172B4D !important;
border-left: 4px solid #172B4D !important;
padding-left: 8px !important;
}
@media (max-width: 768px) {
.pfn-content-container {
padding: 12px;
margin-top: 95px;
margin-bottom: 100px;
width: 100%;
display: flex;
}
.pfn-nfl-shared .pfn-content-container {
margin-bottom: 16px;
padding: 0;
}
.content {
max-width: 412px;
}
.pfn-content-container .parlay-calculator,
.pfn-content-container .odds-calculator,
.pfn-content-container .content,
.pfn-text-content-container {
width: 100%;
}
.pfn-text-content-container .p {
font-size: 14px;
margin-top: 8px;
}
.pfn-text-content-container h2 {
font-weight: 600;
font-size: 18px;
line-height: 24px;
}
.pfn-text-content-container,
.pfn-content-container .calculator-container {
border: unset;
padding: unset;
}
.pfn-content-container .right-sidebar-container {
display: none;
}
.pfn-content-container .ad-content {
width: 100%;
text-align: center;
min-height: 250px;
}
.sticky-ad-container {
width: 100%;
height: 55px;
position: fixed;
display: block;
bottom: 0;
z-index: 1;
}
.more-teams-list .items-container {
height: 80vh !important;
padding-bottom: 80px;
}
.more-teams-list .items-container .more-team-head {
position: fixed;
width: 100%;
border-radius: 25px 25px 0 0;
background-color: white;
}
.more-teams-list .items-container .nfl-zone-title {
margin-top: 60px;
}
.pfn-content-container .top-text-content-container {
padding: 0 16px;
height: 116px;
overflow: hidden;
position: relative;
z-index: 2000;
background: #fff;
}
.pfn-content-container .top-text-content-container .read-more-content-btn,
.pfn-content-container .top-text-content-container .read-less-content-btn {
color: #0B65F0;
padding: 0;
border: unset;
background-color: #fff;
position: absolute;
bottom: 0;
right: 20px;
font-size: 16px;
font-weight: 400;
width: 88px;
}
.top-text-content-container .pfn-text-content-container {
margin-bottom: 0;
}
.top-text-content-container .pfn-text-content-container p {
font-size: 15px;
}
}
</style>
<style>
.pfn-header {
width: 100%;
background: #000;
position: fixed;
top: 0;
left: 0;
padding: 12px 0;
display: flex;
justify-content: center;
z-index: 100;
}
.pfn-header .h1-text-container {
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
}
.pfn-header .updated-timestamp-container {
color: #fff;
font-size: 14px;
font-weight: 600;
}
.pfn-header .header-content {
display: flex;
justify-content: center;
align-items: center;
gap: 12px;
}
.pfn-header .header-content .pfn-header-logo {
width: 116px;
height: 57px;
background: none;
}
.pfn-header .header-content .header-text {
font-weight: 700;
font-size: 25px;
line-height: 38px;
color: #fff;
}
@media (max-width: 768px) {
.pfn-header .header-content .pfn-header-logo {
width: 65px;
height: 32px;
}
.pfn-header .header-content .header-text {
font-weight: 700;
font-size: 14px;
line-height: 21px;
}
.pfn-header .header-content {
gap: 6px;
}
}
</style>
<div class="pfn-header">
<div class="header-content">
<a href="https://www.profootballnetwork.com" target="_blank">
<img class="pfn-header-logo" src="//staticg.sportskeeda.com/skm/assets/third-party/pfn-logo-full.png?h=114" width="116" height="57" alt="pfn-logo" />
</a>
<div class="h1-text-container">
<h1 class="header-text"></h1>
</div>
</div>
</div>
<style>
.header-tools-navigation {
width: 100%;
display: flex;
justify-content: center;
background: #FFFFFF;
z-index: 100;
position: fixed;
top: 81px;
box-shadow: 0px 4px 4px 0px rgb(0 0 0 / 5%);
}
.header-tools-navigation .header-tools-navigation-holder {
display: flex;
width: 1000px;
overflow-x: scroll;
text-wrap: nowrap;
}
.header-tools-navigation .header-tools-navigation-holder::-webkit-scrollbar {
display: none;
}
.header-tools-navigation .header-nav-btn {
font-size: 14px;
line-height: 21px;
font-weight: 500;
color: #666666;
padding: 10px 16px;
border-bottom: 4px;
text-decoration: none;
display: flex;
align-items: center;
white-space: nowrap;
}
.header-nav-btn .trending-icon {
opacity: 0.7;
}
.header-tools-navigation .header-nav-btn.selected {
border-bottom: 4px solid #000000;
}
.header-tools-navigation::-webkit-scrollbar {
display: none;
}
@media (max-width: 768px) {
.header-tools-navigation {
top: 56px;
justify-content: unset;
overflow-x: auto;
}
.header-tools-navigation .header-nav-btn {
white-space: nowrap;
}
.header-tools-navigation .header-nav-btn.selected {
border-bottom: 3px solid #000000;
}
}
</style>
<div class="header-tools-navigation">
<div class="header-tools-navigation-holder">
<a class="header-nav-btn" href="https://www.profootballnetwork.com/">PFN Home</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/mockdraft">Mock Draft Simulator
<img class="trending-icon" src="//staticg.sportskeeda.com/skm/assets/third-party/trending-icon.gif" width="24" height="24" alt="treding-icon" />
</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/nfl-draft">NFL Mock Drafts</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/2024-nfl-draft-big-board/">Big Board</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/fantasy-football-trade-analyzer">Trade Analyzer</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/nfl-player-news-injuries-transactions-fantasy">NFL News Tracker</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/nfl-playoff-predictor">Playoff Predictor</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/who-should-i-start-fantasy-optimizer">Start/Sit Optimizer</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/nfl-dfs-optimizer-lineup-generator">DFS Optimizer</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/nfl-word-fumble-player-name-game">Wordle</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/nfl-betting/betting-odds-calculator">Odds Calculator</a>
<a class="header-nav-btn " href="https://www.profootballnetwork.com/nfl-betting/parlays-calculator">Parlay Calculator</a>
</div>
</div>
<script>
(function() {
var primaryNavContainer = $(".header-tools-navigation-holder");
var primaryNavItems = primaryNavContainer.querySelectorAll("a");
for (var i = 0; i < primaryNavItems.length; i++) {
primaryNavItems[i].addEventListener("click", function(event) {
trackGAEvent("PFN_Navigation_Clicks", {
destinationUrl: event.target.href,
});
});
}
function scrollPrimaryNavigation() {
var xPosition = 0;
var paddingGap = -30;
var found = false;
for (var i = 1; i < primaryNavItems.length; i++) {
var previousItem = primaryNavItems[i - 1];
var currentItem = primaryNavItems[i];
xPosition += previousItem.scrollWidth + paddingGap;
xPosition = Math.max(xPosition, 0);
if (hasClass(currentItem, "selected")) {
found = true;
break;
}
}
if (!found) {
xPosition = 0;
}
primaryNavContainer.scrollBy({
behavior: "smooth",
top: 0,
left: xPosition
});
}
scrollPrimaryNavigation();
})();
</script>
<div class="pfn-content-container">
<div class="content ">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-94BYBHMYCW"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag() {
dataLayer.push(arguments);
}
gtag("js", new Date());
gtag("config", "UA-131524109-1", { "send_page_view": false });
gtag("config", "G-94BYBHMYCW", { "send_page_view": false });
function trackGAEvent(eventName, eventParams) {
eventParams = eventParams || {};
var source = window.location.pathname + window.location.search;
var params = Object.assign({}, {
source_url: source,
source_title: document.title,
"send_to": "G-94BYBHMYCW",
}, eventParams);
var ga3Params = Object.assign({}, params, {
source_url: source,
source_title: document.title,
"send_to": "UA-131524109-1",
});
console.info("GTAG EVENT --> ", eventName, params);
gtag("event", eventName, params);
gtag("event", eventName, ga3Params);
}
</script>
<style>
:root {
--panelXSpacingHeader: 20px;
--panelYSpacingHeader: 10px;
--panelXSpacingBody: 20px;
--panelYSpacingBody: 16px;
--panelXSpacingFooter: 20px;
--panelYSpacingFooter: 16px;
}
.panel {
--borderColor: #E9E9E9;
--xSpacingHeader: var(--panelXSpacingHeader);
--ySpacingHeader: var(--panelYSpacingHeader);
--xSpacingBody: var(--panelXSpacingBody);
--ySpacingBody: var(--panelYSpacingBody);
--xSpacingFooter: var(--panelXSpacingFooter);
--ySpacingFooter: var(--panelYSpacingFooter);
width: 100%;
background: #FFFFFF;
border: 1px solid var(--borderColor);
overflow: clip;
}
.panel.transparent {
background: transparent;
}
.panel.rounded {
border-radius: 12px;
}
.panel.with-shadow {
box-shadow: 0px 4px 4px 0px #E9F2FA;
}
.panel.no-border {
border: none;
}
.panel.transparent-d {
background: transparent;
}
.panel.rounded-d {
border-radius: 12px;
}
.panel.with-shadow-d {
box-shadow: 0px 4px 4px 0px #E9F2FA;
}
.panel.no-border-d {
border: none;
}
.panel-header {
position: relative;
width: 100%;
padding: var(--ySpacingHeader) var(--xSpacingHeader);
border-bottom: 1px solid var(--borderColor);
display: flex;
gap: 10px;
align-items: center;
justify-content: center;
}
.panel.fluid .panel-header {
border-bottom: 0;
padding-bottom: 0;
}
.panel-header.column {
flex-direction: column;
}
.panel-header>.panel-heading {
width: 100%;
margin: 0;
padding: 0;
color: #474747;
font-weight: 600;
font-size: 16px;
line-height: 24px;
}
.panel-header>.panel-heading>h2 {
color: #474747;
font-weight: 600;
font-size: 16px;
line-height: 24px;
}
.panel-header a {
display: flex;
gap: 5px;
align-items: center;
align-self: center;
cursor: pointer;
text-decoration: none;
white-space: nowrap;
color: #0B65F0;
font-size: 14px;
line-height: 21px;
}
.panel-header a.view-more-cta::after {
content: "";
display: block;
width: 6px;
height: 11px;
background-image: url("//staticg.sportskeeda.com/skm/assets/ic_breadcrumb_chevron-right--0B65F0.svg");
background-size: cover;
background-repeat: no-repeat;
}
.panel .panel-body {
padding: var(--ySpacingBody) var(--xSpacingBody);
}
.panel .panel-body.no-padding {
--xSpacingBody: 0;
--ySpacingBody: 0;
}
.panel .panel-header.no-padding {
--xSpacingHeader: 0;
--ySpacingHeader: 0;
}
.panel .panel-body.no-h-padding {
--xSpacingBody: 0;
}
.panel .panel-header.no-h-padding {
--xSpacingHeader: 0;
}
.panel .panel-body.no-v-padding {
--ySpacingBody: 0;
}
.panel .panel-header.no-v-padding {
--ySpacingHeader: 0;
}
.panel .panel-body.no-padding-d {
--xSpacingBody: 0;
--ySpacingBody: 0;
}
.panel .panel-header.no-padding-d {
--xSpacingHeader: 0;
--ySpacingHeader: 0;
}
.panel .panel-body.no-h-padding-d {
--xSpacingBody: 0;
}
.panel .panel-header.no-h-padding-d {
--xSpacingHeader: 0;
}
.panel .panel-body.no-v-padding-d {
--ySpacingBody: 0;
}
.panel .panel-header.no-v-padding-d {
--ySpacingHeader: 0;
}
.panel .panel-footer {
position: relative;
width: 100%;
padding: 0 var(--xSpacingFooter) var(--ySpacingFooter);
}
.panel .panel-body.no-padding+.panel-footer {
--ySpacingFooter: 12px;
padding-top: var(--ySpacingFooter);
}
.panel .panel-cta-button {
cursor: pointer;
width: 100%;
color: #474747;
text-decoration: none;
text-align: center;
display: block;
background-color: #fff;
border: 1px solid #e2e2e2;
border-radius: 2px;
font-size: 16px;
font-weight: 500;
line-height: 18px;
padding: 10px;
}
.panel .panel-cta-button:hover {
border-color: #474747;
}
.panel .panel-cta-link {
width: 100%;
display: flex;
gap: 5px;
align-items: center;
justify-content: center;
cursor: pointer;
text-decoration: none;
white-space: nowrap;
color: #0B65F0;
font-weight: 600;
font-size: 14px;
line-height: 21px;
}
.panel .panel-cta-link::after {
content: "";
display: block;
width: 6px;
height: 11px;
background-image: url("//staticg.sportskeeda.com/skm/assets/ic_breadcrumb_chevron-right--0B65F0.svg");
background-size: cover;
background-repeat: no-repeat;
}
@media screen and (max-width: 768px) {
.panel {
--panelXSpacingHeader: 16px;
--panelYSpacingHeader: 16px;
--panelXSpacingBody: 16px;
--panelYSpacingBody: 16px;
--panelXSpacingFooter: 16px;
--panelYSpacingFooter: 16px;
--borderColor: transparent;
border: none;
}
.panel.transparent-m {
background: transparent;
}
.panel.rounded-m {
border-radius: 12px;
}
.panel.with-shadow-m {
box-shadow: 0px 4px 4px 0px #E9F2FA;
}
.panel.no-border-m {
border: none;
}
.panel .panel-header+.panel-body {
padding-top: 0;
}
.panel .panel-body.no-padding-m {
--xSpacingBody: 0px;
--ySpacingBody: 0px;
}
.panel .panel-header.no-padding-m {
--xSpacingHeader: 0px;
--ySpacingHeader: 0px;
}
.panel .panel-body.no-h-padding-m {
--xSpacingBody: 0px;
}
.panel .panel-header.no-h-padding-m {
--xSpacingHeader: 0px;
}
.panel .panel-body.no-v-padding-m {
--ySpacingBody: 0px;
}
.panel .panel-header.no-v-padding-m {
--ySpacingHeader: 0px;
}
.panel .panel-header.text-sm-m>.panel-heading {
font-size: 14px;
line-height: 21px;
}
}
</style>
<style>
.hidden-view {
visibility: hidden;
}
.slider-container {
--controlSize: 72px;
--controlPositionOffset: -60px;
--iconPositionOffset: -15px;
--iconScale: 1.0;
position: relative;
width: 100%;
display: flex;
gap: 16px;
flex-direction: column;
}
.slider-container .slider-filters {
display: flex;
gap: 8px;
}
.slider-container .slider-filters .slider-filter-switcher {
cursor: pointer;
display: flex;
padding: 8px 12px;
border: 1px solid #E9E9E9;
box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.07);
border-radius: 28px;
background: #F5F5F5;
color: #474747;
font-size: 12px;
line-height: 17px;
}
.slider-container .slider-filters .slider-filter-switcher.active {
background: #D32F2F;
color: #fff;
}
.slider-container .slider-control {
position: absolute;
top: 50%;
transform: translateY(-50%);
z-index: 999;
}
.slider-container .slider-control button.slider-control-btn {
cursor: pointer;
background-color: #fff;
border: 1px solid #dfdfdf;
box-shadow: 3px 1px 10px rgba(0, 0, 0, 0.05);
width: var(--controlSize);
height: var(--controlSize);
border-radius: 50%;
display: flex;
align-items: center;
justify-content: center;
}
.slider-container .slider-control button.slider-control-btn:hover {
background-color: #F5F7FD;
}
.slider-container .slider-control button.slider-control-btn img {
background: none;
width: 13px;
height: 19px;
object-fit: cover;
display: block;
position: relative;
}
.slider-container .slider-control.slider-control--left {
left: var(--controlPositionOffset);
}
.slider-container .slider-control.slider-control--left button.slider-control-btn img {
right: var(--iconPositionOffset);
transform: scale(var(--iconScale)) rotate(180deg);
}
.slider-container .slider-control.slider-control--right {
right: var(--controlPositionOffset);
}
.slider-container .slider-control.slider-control--right button.slider-control-btn img {
left: var(--iconPositionOffset);
transform: scale(var(--iconScale));
}
@media (max-width: 768px) {
.slider-container .slider-control {
display: none;
}
}
.slider-container.m {
--controlSize: 48px;
--controlPositionOffset: -50px;
--iconPositionOffset: -12px;
--iconScale: 0.65;
}
.slider-container.s {
--controlSize: 36px;
--controlPositionOffset: -36px;
--iconPositionOffset: -4px;
--iconScale: 0.5;
}
.slider-container .slider-items {
width: 100%;
display: flex;
gap: 12px;
overflow: hidden;
overflow-x: auto;
-ms-overflow-style: none;
scrollbar-width: none;
}
.slider-container .slider-items::-webkit-scrollbar {
display: none;
}
.slider-items .slider-item {
position: relative;
display: block;
}
.slider-items .slider-item .item-cta {
z-index: 99;
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
opacity: 0;
}
</style>
<script>
function KeedaCarousalControlsHelper(input) {
var self = this;
this.target = input.target;
this.whenCarouselInViewport = input.whenCarouselInViewport;
this.whenCarouselNotInViewport = input.whenCarouselNotInViewport;
this.whenFistItemInViewport = input.whenFistItemInViewport;
this.whenFistItemNotInViewport = input.whenFistItemNotInViewport;
this.whenLastItemInViewport = input.whenLastItemInViewport;
this.whenLastItemNotInViewport = input.whenLastItemNotInViewport;
this.options = input.intersectionObserverOptions || {
threshold: 1
};
}
KeedaCarousalControlsHelper.prototype.observeTarget = function() {
var self = this;
var firstItem = this.target.firstElementChild;
var lastItem = this.target.lastElementChild;
var allChildren = this.target.children;
var firstItem, lastItem;
for (var i = 0; i < allChildren.length; i++) {
if (!allChildren[i].classList.contains("hidden")) {
firstItem = allChildren[i];
break;
}
}
for (var i = allChildren.length - 1; i >= 0; i--) {
if (!allChildren[i].classList.contains("hidden")) {
lastItem = allChildren[i];
break;
}
}
this.firstItemObserver = new IntersectionObserver(function(entries) {
entries.forEach(function(entry) {
if (entry.isIntersecting) {
self.whenFistItemInViewport(entry);
} else {
self.whenFistItemNotInViewport(entry);
}
})
}, this.options);
this.lastItemObserver = new IntersectionObserver(function(entries) {
entries.forEach(function(entry) {
if (entry.isIntersecting) {
self.whenLastItemInViewport(entry);
} else {
self.whenLastItemNotInViewport(entry);
}
})
}, this.options);
firstItem && this.firstItemObserver.observe(firstItem);
lastItem && this.lastItemObserver.observe(lastItem);
if (typeof self.whenCarouselInViewport == "function" && typeof self.whenCarouselNotInViewport == "function") {
this.carouselObserver = new IntersectionObserver(function(entries) {
entries.forEach(function(entry) {
if (entry.isIntersecting) {
self.whenCarouselInViewport(entry);
} else {
self.whenCarouselNotInViewport(entry);
}
})
}, {
threshold: 1
});
this.carouselObserver.observe(this.target);
}
return this;
}
KeedaCarousalControlsHelper.prototype.unobserveTarget = function() {
if (this.carouselObserver) {
this.carouselObserver.disconnect();
}
if (this.firstItemObserver) {
this.firstItemObserver.disconnect();
}
if (this.lastItemObserver) {
this.lastItemObserver.disconnect();
}
return this;
}
KeedaCarousalControlsHelper.prototype.reset = function() {
return this.unobserveTarget().observeTarget();
}
</script>
<script>
(function() {
var SCROLL_WIDTH = 450;
var SLIDER_HELPERS = [];
function resetScroll(sliderItems) {
sliderItems.scrollTo({
behavior: "smooth",
top: 0,
left: 0
});
}
function onLeftControlClicked(sliderItems) {
return function() {
sliderItems.scrollBy({
behavior: "smooth",
top: 0,
left: -SCROLL_WIDTH
});
};
}
function onRightControlClicked(sliderItems) {
return function() {
sliderItems.scrollBy({
behavior: "smooth",
top: 0,
left: SCROLL_WIDTH
});
};
}
function onSliderScroll(e) {
if (typeof lazyLoadAll == "function") {
lazyLoadAll();
}
}
var debouncedSliderScroll = debounce(onSliderScroll, 250);
function onSliderItemCtaClicked(e) {
e.stopImmediatePropagation();
var clickedItem = e.target.closest("a");
if (!clickedItem) return;
var destinationUrl = clickedItem.getAttribute("href");
if (!destinationUrl) return;
var analyticsLabel = clickedItem.dataset["analyticsLabel"];
if (!analyticsLabel) return;
var eventName = [analyticsLabel, "CLICK"].join("_");
trackGAEvent(eventName, {
destination_url: destinationUrl,
destination_label: clickedItem.innerText,
sequence: clickedItem.dataset["sequence"],
type: clickedItem.dataset["type"]
});
}
function initControls(slider) {
var sliderItemsContainer = slider.querySelector(".slider-items");
if (!sliderItemsContainer) return;
var sliderItem = sliderItemsContainer.querySelectorAll(".slider-item");
if (!sliderItem.length) return;
sliderItem.forEach(function(feedItem) {
feedItem.addEventListener("click", onSliderItemCtaClicked);
});
var leftScrollControl = slider.querySelector(".slider-control.slider-control--left");
if (leftScrollControl) {
var leftScrollControlButton = leftScrollControl.querySelector("button.slider-control-btn");
leftScrollControlButton.addEventListener("click", onLeftControlClicked(sliderItemsContainer));
}
var rightScrollControl = slider.querySelector(".slider-control.slider-control--right");
if (rightScrollControl) {
var rightScrollControlButton = rightScrollControl.querySelector("button.slider-control-btn");
rightScrollControlButton.addEventListener("click", onRightControlClicked(sliderItemsContainer));
}
var helper = new KeedaCarousalControlsHelper({
target: sliderItemsContainer,
whenCarouselInViewport: function() {
removeClass(leftScrollControl, "hidden-view");
removeClass(rightScrollControl, "hidden-view");
},
whenCarouselNotInViewport: function() {
addClass(leftScrollControl, "hidden-view");
addClass(rightScrollControl, "hidden-view");
},
whenFistItemInViewport: function(entry) {
addClass(leftScrollControl, "hidden");
},
whenFistItemNotInViewport: function(entry) {
removeClass(leftScrollControl, "hidden");
},
whenLastItemInViewport: function(entry) {
addClass(rightScrollControl, "hidden");
},
whenLastItemNotInViewport: function(entry) {
removeClass(rightScrollControl, "hidden");
}
});
helper.observeTarget();
return helper;
}
function onFilterClick(e) {
var filter = e.target.closest(".slider-filter-switcher");
if (!filter) return;
var filtersContainer = filter.closest(".slider-filters");
if (!filtersContainer) return;
var sliderContainer = filtersContainer.closest(".slider-container");
if (!sliderContainer) return;
var itemsContainer = sliderContainer.querySelector(".slider-items");
if (!itemsContainer) return;
var activeFilter = filtersContainer.querySelector(".slider-filter-switcher.active");
if (activeFilter) {
removeClass(activeFilter, "active");
}
addClass(filter, "active");
resetFilters(sliderContainer);
resetSliderHelper(sliderContainer);
resetScroll(itemsContainer);
if (typeof lazyLoadAll == "function") {
lazyLoadAll();
}
}
function initFilters(slider) {
var filtersContainer = slider.querySelector(".slider-filters");
if (!filtersContainer) return;
filtersContainer.querySelectorAll(".slider-filter-switcher").forEach(function(filter) {
filter.addEventListener("click", onFilterClick);
});
}
function resetFilters(slider) {
var itemsContainer = slider.querySelector(".slider-items");
if (!itemsContainer) return;
var items = itemsContainer.querySelectorAll(".slider-item");
if (!items.length) return;
var filtersContainer = slider.querySelector(".slider-filters");
if (!filtersContainer) return;
var activeFilter = filtersContainer.querySelector(".slider-filter-switcher.active");
if (!activeFilter) return;
var filterFor = activeFilter.dataset["filterFor"];
items.forEach(function(sliderItem) {
var type = sliderItem.dataset["type"];
if (!filterFor) {
removeClass(sliderItem, "hidden");
} else {
if (type == filterFor) {
removeClass(sliderItem, "hidden");
} else {
addClass(sliderItem, "hidden");
}
}
});
}
function initScroller(slider) {
var container = slider.querySelector(".slider-items");
if (!container) return;
var items = container.querySelectorAll(".slider-item");
if (!items.length) return;
container.addEventListener("scroll", debouncedSliderScroll, { passive: true });
var withAutoScroll = slider.dataset["withAutoScroll"];
var withSmoothAutoScroll = slider.dataset["withSmoothAutoScroll"];
if (!withAutoScroll && !withSmoothAutoScroll) return;
var xPosition = 0;
var paddingGap = 10;
var found = false;
for (var i = 1; i < items.length; i++) {
var previousItem = items[i - 1];
var currentItem = items[i];
xPosition += previousItem.scrollWidth + paddingGap;
xPosition = Math.max(xPosition, 0);
if (hasClass(currentItem.children[0], "active")) {
found = true;
xPosition = currentItem.offsetLeft - ((container.getBoundingClientRect().width - currentItem
.getBoundingClientRect().width) / 2);
break;
}
}
if (!found) {
xPosition = 0;
}
var scrollInput = {
top: 0,
left: xPosition
};
if (withSmoothAutoScroll) {
scrollInput["behavior"] = "smooth";
}
container.scrollBy(scrollInput);
}
function resetScroller(slider, options) {
var container = slider.querySelector(".slider-items");
if (!container) return;
var items = container.querySelectorAll(".slider-item");
if (!items.length) return;
var activeItem;
for (var i = 0; i < items.length; i++) {
var currentItem = items[i];
if (hasClass(currentItem, "active") || hasClass(currentItem.children[0], "active")) {
activeItem = currentItem;
break;
}
}
if (!activeItem) return;
var containerMiddle = Math.floor(container.clientWidth / 2);
var activeItemMiddle = Math.floor(activeItem.clientWidth / 2);
var xPosition = activeItem.offsetLeft + activeItemMiddle - containerMiddle;
var scrollOption = {
top: 0,
left: xPosition,
}
if (options.withSmoothScroll) {
scrollOption["behavior"] = "smooth";
}
window.requestAnimationFrame(function() {
container.scroll(scrollOption);
});
}
function appendItem(sliderContainer, itemToAppend, attributes) {
if (!sliderContainer) return;
if (typeof sliderContainer.appendChild != "function") return;
var sliderItems = sliderContainer.querySelector(".slider-items");
if (!sliderItems) return;
if (!itemToAppend) return;
var sliderItem = document.createElement("div");
sliderItem.classList.add("slider-item");
sliderItem.appendChild(itemToAppend);
for (var key in attributes) {
sliderItem.setAttribute(key, attributes[key]);
}
sliderItems.appendChild(sliderItem);
resetFilters(sliderContainer);
resetSliderHelper(sliderContainer);
}
function resetSliderHelper(slider) {
var itemsContainer = slider.querySelector(".slider-items");
if (!itemsContainer) return;
var matchingHelper = SLIDER_HELPERS.find(function(helper) {
return helper.target == itemsContainer;
});
if (!matchingHelper) return;
matchingHelper.reset();
}
function initSlider(slider) {
initFilters(slider);
initScroller(slider);
var helper = initControls(slider);
if (helper) {
SLIDER_HELPERS.push(helper);
}
}
var initCalled = false;
function init() {
if (initCalled) return;
initCalled = true;
$all(".slider-container").forEach(initSlider);
window.addEventListener("custom:sk:horizontalSlider:scrollToActiveItem", function(e) {
var params = e.detail;
var sliderContainer = params.sliderContainer;
if (!sliderContainer) return;
resetScroller(sliderContainer, {
withSmoothScroll: !!params.withSmoothScroll
});
});
window.addEventListener("custom:sk:horizontalSlider:appendItem", function(e) {
var params = e.detail;
var sliderContainer = params.sliderContainer;
if (!sliderContainer) return;
var itemToAppend = params.itemToAppend;
if (!itemToAppend) return;
appendItem(sliderContainer, itemToAppend, params.attributes || {});
});
window.addEventListener("custom:sk:horizontalSlider:resetHelper", function(e) {
var params = e.detail;
var sliderContainer = params.sliderContainer;
if (!sliderContainer) return;
resetSliderHelper(sliderContainer);
});
window.addEventListener("custom:sk:horizontalSlider:initSlider", function(e) {
var params = e.detail;
var sliderContainer = params.sliderContainer;
if (!sliderContainer) return;
initSlider(sliderContainer);
});
}
window.addEventListener("DOMContentLoaded", init);
if (domContentLoaded) {
init();
}
})();
</script>
<style>
.nfl-schedule-wrapper {
--table-header-bg: #fff;
--table-header-color: #2D2D2D;
--subheader-bg: #F5F5F5;
--table-header-padding: 8px;
--bg-primary: #f5f5f5;
--font-color-primary: #2D2D2D;
--bg-secondary: #FFF;
}
.content-container-section {
width: 100%;
gap: 20px;
}
.nfl-schedule-wrapper {
border: 1px solid #E9E9E9;
position: relative;
}
.nfl-schedule-wrapper .nfl-schedule-header {
display: flex;
align-items: center;
justify-content: space-between;
padding: 10px 20px;
border-bottom: 1px solid #E9E9E9;
}
.nfl-schedule-wrapper .nfl-schedule-header h1 {
font-weight: 600;
font-size: 16px;
line-height: 24px;
color: #474747;
}
/* week scroll*/
.nfl-schedule-weeks {
display: flex;
width: 100%;
}
.nfl-schedule-weeks .week-scroll-section {
position: relative;
width: 95%;
display: flex;
overflow: hidden;
}
.nfl-schedule-weeks .inner {
padding: 2px 5px;
border-radius: 4px;
border: 1px solid #F5F5F5;
background: var(--bg-secondary);
display: flex;
flex-direction: column;
align-items: center;
position: relative;
min-height: 40px;
min-width: 50px;
display: flex;
align-items: center;
justify-content: center;
}
.nfl-schedule-weeks .inner.active {
border: 1px solid #2D2D2D;
background: #F5F5F5;
}
.nfl-schedule-weeks .inner.active .week-name,
.nfl-schedule-weeks .inner.active .week-date {
color: #2D2D2D;
}
.nfl-schedule-weeks .week-name,
.nfl-schedule-weeks .week-date {
color: #474747;
font-size: 12px;
font-weight: 400;
line-height: normal;
white-space: nowrap;
}
.nfl-schedule-weeks .week-sec.active .week-name,
.nfl-schedule-weeks .week-sec.active .week-date,
.nfl-schedule-weeks .week-sec:hover .week-name,
.nfl-schedule-weeks .week-sec:hover .week-date {
color: #2D2D2D;
font-size: 12px;
font-weight: 600;
}
.nfl-schedule-weeks .week-date,
.nfl-schedule-weeks .week-sec.active .week-date,
.nfl-schedule-weeks .week-sec:hover .week-date {
font-size: 10px;
}
/* date picker*/
.nfl-schedule-weeks .date-picker {
position: relative;
width: 5%;
display: flex;
justify-content: center;
align-items: center;
}
.nfl-schedule-weeks .date-picker .date-picker-buttton {
width: 20px;
height: 20px;
color: transparent;
background-image: url('//staticg.sportskeeda.com/skm/assets/icons_calendar_sleek.svg');
background-repeat: no-repeat;
border: 0;
background-size: cover;
outline: none;
padding: 0;
background-color: transparent;
cursor: pointer;
}
.nfl-schedule-weeks .date-picker-modal {
position: absolute;
top: 65px;
right: 0;
padding: 16px;
border-radius: 8px;
background: #FFFFFF;
box-shadow: -1px 6px 12px rgb(0 0 0 / 10%);
height: 350px;
overflow-x: auto;
z-index: 999;
}
.nfl-schedule-weeks .date-picker-modal .years-section {
display: flex;
align-items: center;
justify-content: space-between;
}
.nfl-schedule-weeks .date-picker-modal .years-section img {
width: 10px;
height: 14px;
object-fit: cover;
display: block;
position: relative;
}
.nfl-schedule-weeks .date-picker-modal .years-section .left-year img {
transform: rotate(180deg);
}
.nfl-schedule-weeks .date-picker-modal .year-name {
color: #2D2D2D;
font-family: Poppins;
font-size: 16px;
font-style: normal;
font-weight: 600;
line-height: normal;
flex: 1;
text-align: center;
}
.nfl-schedule-weeks .date-picker-modal .yearly-weeks-section {
display: flex;
align-items: center;
justify-content: space-between;
gap: 16px;
flex-direction: column;
margin-top: 16px;
}
.nfl-schedule-weeks .date-picker-modal button {
background: transparent;
border: none;
cursor: pointer;
}
.nfl-schedule-weeks .date-picker-modal .week-sec {
display: flex;
align-items: center;
justify-content: space-between;
width: 100%;
text-decoration: none;
gap: 30px;
}
.nfl-schedule-weeks .date-picker-modal:after {
content: '';
height: 15px;
width: 15px;
background: #FFF;
position: absolute;
transform: rotate(45deg);
right: 10px;
top: -9px;
border-top: 1px solid #e9e9e9;
border-left: 1px solid #e9e9e9;
}
.nfl-schedule-weeks .years-section .no-visibility {
visibility: hidden;
}
.nfl-schedule-header .more-teams-list .nfl-zone-title {
color: #D32F2F;
font-weight: 600;
}
.cms-content figure.image {
display: flex;
flex-direction: column;
align-items: center;
}
.page-seo-content .cms-content ul {
margin-left: 50px;
}
.regular-week-10 .page-seo-content .cms-content ul,
.regular-week-11 .page-seo-content .cms-content ul,
.regular-week-12 .page-seo-content .cms-content ul,
.regular-week-13 .page-seo-content .cms-content ul {
margin-left: 20px;
}
.page-seo-content .cms-content h3 {
margin-left: 75px;
}
.regular-week-10 .page-seo-content .cms-content h3,
.regular-week-11 .page-seo-content .cms-content h3,
.regular-week-12 .page-seo-content .cms-content h3,
.regular-week-13 .page-seo-content .cms-content h3,
.regular-week-14 .page-seo-content .cms-content h3,
.regular-week-15 .page-seo-content .cms-content h3 {
margin-left: 0px;
}
.page-seo-content .cms-content ul li {
list-style: disc;
list-style-position: inside;
}
.regular-week-10 .page-seo-content .cms-content ul li,
.regular-week-11 .page-seo-content .cms-content ul li,
.regular-week-12 .page-seo-content .cms-content ul li,
.regular-week-13 .page-seo-content .cms-content ul li {
list-style-position: unset;
}
.page-seo-content .cms-content ul li span:first-child {
width: 20%;
margin-right: 30px;
}
@media (max-width:768px) {
.nfl-schedule-wrapper {
border: none;
}
.nfl-schedule-wrapper .nfl-schedule-header {
flex-direction: column;
gap: 12px;
align-items: flex-start;
padding: 8px 16px 0px;
border: none;
}
.nfl-schedule-weeks {
padding: 0 16px 0 0;
gap: 8px;
}
.nfl-schedule-weeks .week-scroll-section {
width: 92%;
}
.nfl-schedule-weeks .date-picker {
width: 8%;
}
.page-seo-content .cms-content ul {
margin-left: 0px;
}
.page-seo-content .cms-content h3 {
margin-left: 20px;
}
.regular-week-10 .page-seo-content .cms-content ul,
.regular-week-11 .page-seo-content .cms-content ul,
.regular-week-12 .page-seo-content .cms-content ul,
.regular-week-13 .page-seo-content .cms-content ul{
margin-left: 0px;
}
}
</style>
<main class="nfl-schedule-home">
<section class="layout-wrapper">
<div class="content-container-section pre-week-1">
<div class="left">
<div class="nfl-schedule-wrapper">
<div class="nfl-schedule-header">
<h1>NFL Schedule 2023</h1>
<style>
.more-teams-section {
position: relative;
}
.more-teams-section .more-teams {
display: flex;
padding: 7px 12px;
align-items: center;
gap: 11px;
border-radius: 18px;
border: 1px solid #E9E9E9;
cursor: pointer;
color: #2D2D2D;
font-size: 12px;
font-weight: 500;
line-height: 16px;
}
.more-teams-section .more-team-ic {
transform: rotate(180deg);
height: 6px;
width: 10px;
}
.more-teams-section .open .more-team-ic {
transform: unset;
}
.more-teams-section .more-team-name {
white-space: nowrap;
}
.more-teams-list {
position: absolute;
top: 47px;
right: 0;
padding: 16px;
border-radius: 8px;
background: #FFFFFF;
box-shadow: -1px 6px 12px rgb(0 0 0 / 10%);
z-index: 1000;
}
.more-teams-list .nfl-zone {
color: #999;
font-size: 10px;
font-weight: 500;
line-height: normal;
padding-left: 10px;
}
.more-teams-list .team-name .team-name-link {
white-space: unset;
color: #2D2D2D;
font-size: 12px;
font-weight: 400;
line-height: normal;
cursor: pointer;
text-decoration: none;
display: flex;
align-items: center;
gap: 6px;
padding-left: 10px;
}
.more-teams-list .team-name .team-name-link:hover {
color: #d32f2f;
background-color: #f5f5f5;
}
.more-teams-list .team-name .team-name-link.matched-team {
color: #D32F2F;
font-weight: 600;
}
.more-teams-list .more-team-body {
display: flex;
flex-shrink: 0;
flex-wrap: wrap;
width: 850px;
align-items: stretch;
gap: 15px 20px;
}
.more-teams-list:after {
content: '';
height: 15px;
width: 15px;
background: #FFF;
position: absolute;
transform: rotate(45deg);
right: 21px;
top: -9px;
border-top: 1px solid #e9e9e9;
border-left: 1px solid #e9e9e9;
}
.more-teams-list .more-zone-team {
width: calc(25% - 15px);
display: flex;
flex-direction: column;
gap: 10px;
}
.more-teams-list .more-team-zone-ic {
height: 20px;
width: 20px;
border: 1px solid #F5F5F5;
background: transparent;
border-radius: 100%;
}
.more-teams-list .nfl-zone-title {
display: flex;
gap: 10px;
align-items: center;
margin-bottom: 16px;
color: #2D2D2D;
font-size: 12px;
font-weight: 400;
line-height: normal;
padding-left: 10px;
}
.more-teams-list .more-zone-ic {
height: 16px;
width: 12px;
}
.more-teams-section .nfl-zone-title a {
color: inherit;
font-size: 12px;
line-height: normal;
gap: 10px;
display: flex;
text-decoration: none;
}
.more-teams-section .nfl-zone-title a:hover {
color: #d32f2f;
}
.content-container,
.content-container .left,
.panel {
overflow: visible;
}
@media (max-width: 768px) {
.more-teams-section .more-teams {
padding: 7px 12px;
align-items: center;
gap: 11px;
font-size: 12px;
}
.more-teams-section .more-team-head {
display: flex;
align-items: center;
justify-content: space-between;
padding: 16px 20px;
box-shadow: 2px 0px 6px rgb(0 0 0 / 5%);
color: #474747;
font-weight: 600;
font-size: 14px;
line-height: 21px;
}
.more-teams-section .close-more-team {
color: #474747;
font-size: 20px;
cursor: pointer;
}
.more-teams-list {
overflow: hidden;
width: 100%;
position: fixed;
transition: max-height 0s ease-out;
background: rgba(0, 0, 0, 0.80);
top: 0px;
bottom: 0;
z-index: 9999;
left: 0;
margin: 0;
padding: 0px;
display: flex;
align-items: flex-end;
max-height: 1600px;
}
.more-teams-list.team-content-open {
overflow: visible;
animation-name: team-slide-up;
animation-duration: 500ms;
animation-iteration-count: 1;
animation-fill-mode: both;
}
.more-teams-list.team-content-open {
height: auto;
}
.more-teams-list.team-content-close {
animation-name: team-slide-down;
animation-duration: 500ms;
animation-iteration-count: 1;
animation-fill-mode: both;
}
.more-teams-list:after {
content: none;
}
@keyframes team-slide-up {
0% {
-webkit-transform: translateY(100%);
transform: translateY(100%);
}
100% {
transform: translateY(0%);
-webkit-transform: translateY(0%);
}
}
@keyframes team-slide-down {
0% {
transform: translateY(0%);
-webkit-transform: translateY(0%);
}
100% {
-webkit-transform: translateY(100%);
transform: translateY(100%);
visibility: hidden;
}
}
.more-teams-list .items-container {
width: 100%;
height: auto;
background: #fff;
border-radius: 25px 25px 0 0;
overflow-y: auto;
max-height: 100%;
}
.more-teams-list .more-team-body {
padding: 14px 16px;
width: 100%;
}
.more-teams-list .more-zone-team {
width: calc(50% - 15px);
}
.more-teams-list .team-name .team-name-link,
.more-teams-list .nfl-zone {
padding-left: 0;
}
.more-teams-list .more-team-name {
width: 100%;
overflow: hidden;
text-overflow: ellipsis;
white-space: nowrap;
}
.more-teams-list .nfl-zone-title {
padding-left: 16px;
margin: 12px 0 0;
}
}
</style>
<div id="more-teams-section" class="more-teams-section">
<div class="more-teams" onclick="toggleMoreNflTeams()">
<span class="more-team-name">Team Schedules</span>
<img class="more-team-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/cricket_images/up-arrow-icon.svg" />
</div>
<div id="more-teams-list" class="more-teams-list hidden">
<div class="items-container">
<div class="nfl-zone-title">
<a href="/nfl/schedule">
<img class="more-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/assets/nfl-ic.png" />
ALL NFL
</a>
</div>
<div class="more-team-body">
<div class="more-zone-team">
<div class="nfl-zone">AFC EAST</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/buffalo-bills/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/buffalo-bills.png?h=16" />
<span class="more-team-name">Buffalo Bills</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/miami-dolphins/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/miami-dolphins.png?h=16" />
<span class="more-team-name">Miami Dolphins</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/new-england-patriots/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/new-england-patriots.png?h=16" />
<span class="more-team-name">New England Patriots</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/new-york-jets/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/new-york-jets.png?h=16" />
<span class="more-team-name">New York Jets</span>
</a>
</div>
</div>
<div class="more-zone-team">
<div class="nfl-zone">AFC WEST</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/denver-broncos/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/denver-broncos.png?h=16" />
<span class="more-team-name">Denver Broncos</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/kansas-city-chiefs/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/kansas-city-chiefs.png?h=16" />
<span class="more-team-name">Kansas City Chiefs</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/las-vegas-raiders/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/las-vegas-raiders.png?h=16" />
<span class="more-team-name">Las Vegas Raiders</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/los-angeles-chargers/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/los-angeles-chargers.png?h=16" />
<span class="more-team-name">Los Angeles Chargers</span>
</a>
</div>
</div>
<div class="more-zone-team">
<div class="nfl-zone">AFC NORTH</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/baltimore-ravens/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/baltimore-ravens.png?h=16" />
<span class="more-team-name">Baltimore Ravens</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/cincinnati-bengals/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/cincinnati-bengals.png?h=16" />
<span class="more-team-name">Cincinnati Bengals</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/cleveland-browns/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/cleveland-browns.png?h=16" />
<span class="more-team-name">Cleveland Browns</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/pittsburgh-steelers/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/pittsburgh-steelers.png?h=16" />
<span class="more-team-name">Pittsburgh Steelers</span>
</a>
</div>
</div>
<div class="more-zone-team">
<div class="nfl-zone">AFC SOUTH</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/houston-texans/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/houston-texans.png?h=16" />
<span class="more-team-name">Houston Texans</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/indianapolis-colts/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/indianapolis-colts.png?h=16" />
<span class="more-team-name">Indianapolis Colts</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/jacksonville-jaguars/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/jacksonville-jaguars.png?h=16" />
<span class="more-team-name">Jacksonville Jaguars</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/tennessee-titans/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/tennessee-titans.png?h=16" />
<span class="more-team-name">Tennessee Titans</span>
</a>
</div>
</div>
<div class="more-zone-team">
<div class="nfl-zone">NFC EAST</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/dallas-cowboys/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/dallas-cowboys.png?h=16" />
<span class="more-team-name">Dallas Cowboys</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/new-york-giants/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/new-york-giants.png?h=16" />
<span class="more-team-name">New York Giants</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/philadelphia-eagles/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/philadelphia-eagles.png?h=16" />
<span class="more-team-name">Philadelphia Eagles</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/washington-commanders/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/washington-commanders.png?h=16" />
<span class="more-team-name">Washington Commanders</span>
</a>
</div>
</div>
<div class="more-zone-team">
<div class="nfl-zone">NFC WEST</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/arizona-cardinals/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/arizona-cardinals.png?h=16" />
<span class="more-team-name">Arizona Cardinals</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/los-angeles-rams/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/los-angeles-rams.png?h=16" />
<span class="more-team-name">Los Angeles Rams</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/san-francisco-49ers/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/san-francisco-49ers.png?h=16" />
<span class="more-team-name">San Francisco 49ers</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/seattle-seahawks/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/seattle-seahawks.png?h=16" />
<span class="more-team-name">Seattle Seahawks</span>
</a>
</div>
</div>
<div class="more-zone-team">
<div class="nfl-zone">NFC NORTH</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/chicago-bears/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/chicago-bears.png?h=16" />
<span class="more-team-name">Chicago Bears</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/detroit-lions/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/detroit-lions.png?h=16" />
<span class="more-team-name">Detroit Lions</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/green-bay-packers/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/green-bay-packers.png?h=16" />
<span class="more-team-name">Green Bay Packers</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/minnesota-vikings/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/minnesota-vikings.png?h=16" />
<span class="more-team-name">Minnesota Vikings</span>
</a>
</div>
</div>
<div class="more-zone-team">
<div class="nfl-zone">NFC SOUTH</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/atlanta-falcons/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/atlanta-falcons.png?h=16" />
<span class="more-team-name">Atlanta Falcons</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/carolina-panthers/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/carolina-panthers.png?h=16" />
<span class="more-team-name">Carolina Panthers</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/new-orleans-saints/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/new-orleans-saints.png?h=16" />
<span class="more-team-name">New Orleans Saints</span>
</a>
</div>
<div class="team-name">
<a class="team-name-link " href="/nfl/teams/tampa-bay-buccaneers/schedule/2023">
<img class="more-team-zone-ic" height="8" width="14" alt="icon" src="//staticg.sportskeeda.com/nfl-images/tampa-bay-buccaneers.png?h=16" />
<span class="more-team-name">Tampa Bay Buccaneers</span>
</a>
</div>
</div>
</div>
</div>
</div>
</div>
<script>
var toggleMoreNflTeams = (function() {
var isDesktop = "1";
if (isDesktop) {
var teamsEle = $("#more-teams-section");
document.body.addEventListener("click", function(event) {
if (!teamsEle.contains(event.target)) {
var nflTeamsEle = $("#more-teams-list");
if (nflTeamsEle) {
addClass(nflTeamsEle, "hidden");
removeClass($(".more-teams"), "open");
}
}
});
}
function toggleMoreNflTeams() {
var teamEle = $(".more-teams");
var moreTeamDiv = $(".more-teams-list");
if (hasClass(teamEle, "open")) {
removeClass(teamEle, "open");
if (isDesktop) {
addClass(moreTeamDiv, "hidden");
} else {
removeClass(moreTeamDiv, "team-content-open");
addClass(moreTeamDiv, "team-content-close");
}
} else {
addClass(teamEle, "open");
removeClass(moreTeamDiv, "hidden");
if (!isDesktop) {
addClass(moreTeamDiv, "team-content-open");
removeClass(moreTeamDiv, "team-content-close");
}
}
}
return toggleMoreNflTeams;
})();
</script>
</div>
<style>
.widget--week-numbers .active .inner {
border: 1px solid #2D2D2D;
background: var(--bg-primary);
}
.widget--week-numbers .active .week-name,
.widget--week-numbers .active .week-date {
color: var(--font-color-primary);
}
.widget--week-numbers>.panel {
border-right: 1px solid #DFDFDF;
}
.widget--week-numbers .slider-container .slider-items {
padding: 0 20px;
gap: 65px;
}
@media (max-width:768px) {
.widget--week-numbers>.panel {
border-right: none;
}
.widget--week-numbers .slider-container .slider-items {
padding: 0;
gap: 30px;
}
.widget--week-numbers .nfl-schedule-weeks .week-scroll-section {
margin: 0;
}
}
</style>
<div class="nfl-schedule-weeks">
<div class="widget--week-numbers week-scroll-section">
<div class="panel no-border week-numbers-carousel-container">
<div class="panel-body ">
<div class="week-numbers-carousel">
<div class="slider-container " data-with-auto-scroll="true">
<div class="slider-control slider-control--left hidden">
<button class="slider-control-btn">
<img height="19" width="13" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg" />
</button>
</div>
<div class="slider-items">
<div class="slider-item">
<div class="week-number-item active">
<div id="week-pre-week-1" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/pre-week-1" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="1" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">HOF</div>
<div class="week-date">
Jul 31-07
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-pre-week-2" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/pre-week-2" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="2" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">PRE WK 1</div>
<div class="week-date">
Aug 08-14
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-pre-week-3" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/pre-week-3" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="3" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">PRE WK 2</div>
<div class="week-date">
Aug 15-21
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-pre-week-4" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/pre-week-4" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="4" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">PRE WK 3</div>
<div class="week-date">
Aug 22-Sep 05
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-1" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-1" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="5" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 1</div>
<div class="week-date">
Sep 06-11
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-2" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-2" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="6" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 2</div>
<div class="week-date">
Sep 12-18
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-3" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-3" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="7" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 3</div>
<div class="week-date">
Sep 19-25
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-4" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-4" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="8" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 4</div>
<div class="week-date">
Sep 26-Oct 02
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-5" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-5" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="9" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 5</div>
<div class="week-date">
Oct 03-09
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-6" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-6" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="10" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 6</div>
<div class="week-date">
Oct 10-16
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-7" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-7" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="11" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 7</div>
<div class="week-date">
Oct 17-23
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-8" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-8" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="12" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 8</div>
<div class="week-date">
Oct 24-30
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-9" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-9" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="13" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 9</div>
<div class="week-date">
Oct 31-06
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-10" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-10" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="14" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 10</div>
<div class="week-date">
Nov 07-13
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-11" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-11" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="15" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 11</div>
<div class="week-date">
Nov 14-20
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-12" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-12" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="16" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 12</div>
<div class="week-date">
Nov 21-27
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-13" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-13" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="17" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 13</div>
<div class="week-date">
Nov 28-Dec 04
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-14" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-14" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="18" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 14</div>
<div class="week-date">
Dec 05-11
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-15" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-15" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="19" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 15</div>
<div class="week-date">
Dec 12-18
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-16" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-16" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="20" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 16</div>
<div class="week-date">
Dec 19-25
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-17" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-17" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="21" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 17</div>
<div class="week-date">
Dec 26-Jan 01
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-regular-week-18" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/regular-week-18" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="22" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WEEK 18</div>
<div class="week-date">
Jan 02-11
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-post-week-19" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/post-week-19" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="23" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">WC</div>
<div class="week-date">
Jan 12-15
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-post-week-20" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/post-week-20" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="24" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">DIV</div>
<div class="week-date">
Jan 16-22
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-post-week-21" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/post-week-21" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="25" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">CONF</div>
<div class="week-date">
Jan 23-29
</div>
</div>
</div>
</div>
<div class="slider-item">
<div class="week-number-item ">
<div id="week-post-week-23" class="inner">
<a class="item-cta" href="/nfl/schedule/2023/post-week-23" aria-label="week number carousel item" data-type="week-numbers-carousel" data-sequence="26" data-analytics-label="NFL_WEEK_NUMBER_ITEM"></a>
<div class="week-name">SB</div>
<div class="week-date">
Feb 11
</div>
</div>
</div>
</div>
</div>
<div class="slider-control slider-control--right hidden">
<button class="slider-control-btn">
<img height="19" width="13" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg" />
</button>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="date-picker" id="date-picker">
<button class="date-picker-buttton" type="button" onclick="onDateButtonClick(event)" aria-label="Select season and week"></button>
<div class="date-picker-modal hidden" id="date-picker-modal">
<div class="season-weeks season-weeks-2020 hidden">
<div class="years-section">
<div class="year-name">2020</div>
<button class="right-year" onclick="seasonYearToggle(2021)">
<img height="8" width="12" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg">
</button>
</div>
<div class="yearly-weeks-section">
<button class="week-sec " onclick="onWeekEleClick(2020, 'pre-week-1')">
<div class="week-name">Hall of Fame Game</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'pre-week-2')">
<div class="week-name">Preseason Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'pre-week-3')">
<div class="week-name">Preseason Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'pre-week-4')">
<div class="week-name">Preseason Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'pre-week-5')">
<div class="week-name">Preseason Week 4</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-1')">
<div class="week-name">Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-2')">
<div class="week-name">Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-3')">
<div class="week-name">Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-4')">
<div class="week-name">Week 4</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-5')">
<div class="week-name">Week 5</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-6')">
<div class="week-name">Week 6</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-7')">
<div class="week-name">Week 7</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-8')">
<div class="week-name">Week 8</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-9')">
<div class="week-name">Week 9</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-10')">
<div class="week-name">Week 10</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-11')">
<div class="week-name">Week 11</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-12')">
<div class="week-name">Week 12</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-13')">
<div class="week-name">Week 13</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-14')">
<div class="week-name">Week 14</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-15')">
<div class="week-name">Week 15</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-16')">
<div class="week-name">Week 16</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'regular-week-17')">
<div class="week-name">Week 17</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'post-week-18')">
<div class="week-name">Wild Card Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'post-week-19')">
<div class="week-name">Divisional Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'post-week-20')">
<div class="week-name">Conference Championship</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'pro-bowl-week-21')">
<div class="week-name">Pro Bowl</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2020, 'post-week-22')">
<div class="week-name">Super Bowl</div>
</button>
</div>
</div>
<div class="season-weeks season-weeks-2021 hidden">
<div class="years-section">
<button class="left-year" onclick="seasonYearToggle(2020)">
<img height="8" width="12" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg">
</button>
<div class="year-name">2021</div>
<button class="right-year" onclick="seasonYearToggle(2022)">
<img height="8" width="12" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg">
</button>
</div>
<div class="yearly-weeks-section">
<button class="week-sec " onclick="onWeekEleClick(2021, 'pre-week-1')">
<div class="week-name">Hall of Fame Game</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'pre-week-2')">
<div class="week-name">Preseason Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'pre-week-3')">
<div class="week-name">Preseason Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'pre-week-4')">
<div class="week-name">Preseason Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-1')">
<div class="week-name">Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-2')">
<div class="week-name">Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-3')">
<div class="week-name">Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-4')">
<div class="week-name">Week 4</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-5')">
<div class="week-name">Week 5</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-6')">
<div class="week-name">Week 6</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-7')">
<div class="week-name">Week 7</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-8')">
<div class="week-name">Week 8</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-9')">
<div class="week-name">Week 9</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-10')">
<div class="week-name">Week 10</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-11')">
<div class="week-name">Week 11</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-12')">
<div class="week-name">Week 12</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-13')">
<div class="week-name">Week 13</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-14')">
<div class="week-name">Week 14</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-15')">
<div class="week-name">Week 15</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-16')">
<div class="week-name">Week 16</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-17')">
<div class="week-name">Week 17</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'regular-week-18')">
<div class="week-name">Week 18</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'post-week-19')">
<div class="week-name">Wild Card Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'post-week-20')">
<div class="week-name">Divisional Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'post-week-21')">
<div class="week-name">Conference Championship</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'pro-bowl-week-22')">
<div class="week-name">Pro Bowl</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2021, 'post-week-23')">
<div class="week-name">Super Bowl</div>
</button>
</div>
</div>
<div class="season-weeks season-weeks-2022 hidden">
<div class="years-section">
<button class="left-year" onclick="seasonYearToggle(2021)">
<img height="8" width="12" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg">
</button>
<div class="year-name">2022</div>
<button class="right-year" onclick="seasonYearToggle(2023)">
<img height="8" width="12" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg">
</button>
</div>
<div class="yearly-weeks-section">
<button class="week-sec " onclick="onWeekEleClick(2022, 'pre-week-1')">
<div class="week-name">Hall of Fame Game</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'pre-week-2')">
<div class="week-name">Preseason Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'pre-week-3')">
<div class="week-name">Preseason Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'pre-week-4')">
<div class="week-name">Preseason Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-1')">
<div class="week-name">Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-2')">
<div class="week-name">Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-3')">
<div class="week-name">Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-4')">
<div class="week-name">Week 4</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-5')">
<div class="week-name">Week 5</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-6')">
<div class="week-name">Week 6</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-7')">
<div class="week-name">Week 7</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-8')">
<div class="week-name">Week 8</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-9')">
<div class="week-name">Week 9</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-10')">
<div class="week-name">Week 10</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-11')">
<div class="week-name">Week 11</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-12')">
<div class="week-name">Week 12</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-13')">
<div class="week-name">Week 13</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-14')">
<div class="week-name">Week 14</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-15')">
<div class="week-name">Week 15</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-16')">
<div class="week-name">Week 16</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-17')">
<div class="week-name">Week 17</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'regular-week-18')">
<div class="week-name">Week 18</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'post-week-19')">
<div class="week-name">Wild Card Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'post-week-20')">
<div class="week-name">Divisional Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'post-week-21')">
<div class="week-name">Conference Championship</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2022, 'post-week-23')">
<div class="week-name">Super Bowl</div>
</button>
</div>
</div>
<div class="season-weeks season-weeks-2023 ">
<div class="years-section">
<button class="left-year" onclick="seasonYearToggle(2022)">
<img height="8" width="12" alt="scroll button icon" loading="lazy" src="//staticg.sportskeeda.com/skm/assets/ic-cheveron-right--2d2d2d.svg">
</button>
<div class="year-name">2023</div>
</div>
<div class="yearly-weeks-section">
<button class="week-sec  active " onclick="onWeekEleClick(2023, 'pre-week-1')">
<div class="week-name">Hall of Fame Game</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'pre-week-2')">
<div class="week-name">Preseason Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'pre-week-3')">
<div class="week-name">Preseason Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'pre-week-4')">
<div class="week-name">Preseason Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-1')">
<div class="week-name">Week 1</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-2')">
<div class="week-name">Week 2</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-3')">
<div class="week-name">Week 3</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-4')">
<div class="week-name">Week 4</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-5')">
<div class="week-name">Week 5</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-6')">
<div class="week-name">Week 6</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-7')">
<div class="week-name">Week 7</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-8')">
<div class="week-name">Week 8</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-9')">
<div class="week-name">Week 9</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-10')">
<div class="week-name">Week 10</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-11')">
<div class="week-name">Week 11</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-12')">
<div class="week-name">Week 12</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-13')">
<div class="week-name">Week 13</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-14')">
<div class="week-name">Week 14</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-15')">
<div class="week-name">Week 15</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-16')">
<div class="week-name">Week 16</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-17')">
<div class="week-name">Week 17</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'regular-week-18')">
<div class="week-name">Week 18</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'post-week-19')">
<div class="week-name">Wild Card Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'post-week-20')">
<div class="week-name">Divisional Playoff</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'post-week-21')">
<div class="week-name">Conference Championship</div>
</button>
<button class="week-sec " onclick="onWeekEleClick(2023, 'post-week-23')">
<div class="week-name">Super Bowl</div>
</button>
</div>
</div>
</div>
</div>
</div>
<style>
.schedule-section {
margin-top: 10px;
}
.schedule-section .schedule-table {
border: none;
border-collapse: unset;
}
.schedule-section .schedule-table .table-body tr:hover {
background-color: #ECECFE;
}
.schedule-section .schedule-date {
padding: 3px 20px;
color: #2D2D2D;
font-size: 14px;
font-weight: 600;
line-height: normal;
background: var(--subheader-bg);
}
.schedule-section .team-schedule-div {
margin: 16px 20px;
}
.schedule-section table.schedule-table tr {
background-color: #ffffff;
}
.schedule-section .schedule-table th {
color: var(--table-header-color);
background-color: var(--table-header-bg);
font-size: 12px;
font-weight: 600;
line-height: 20px;
text-align: left;
border-bottom: 1px solid #999999;
padding: 8px;
white-space: nowrap;
padding-top: 0px;
}
.schedule-section .schedule-table.post th {
min-width: 170px;
}
.schedule-section .schedule-table.post th:first-child {
min-width: 430px;
}
.schedule-section .schedule-table.post th:nth-child(2) {
min-width: 110px;
}
.schedule-section .schedule-table.pre th:nth-child(2) {
width: 90px;
}
.schedule-section .schedule-table.pre th:nth-child(3) {
width: 124px;
}
.schedule-section .schedule-table td {
color: #666;
font-size: 12px;
font-weight: 400;
line-height: 20px;
text-align: left;
border: none;
border-bottom: 1px solid #F5F5F5;
padding: 8px;
white-space: nowrap;
vertical-align: middle;
}
.schedule-section .schedule-table tr:last-child td {
border-bottom: none;
}
.schedule-section .schedule-table td a {
text-decoration: none;
color: #0B65F0;
}
.schedule-section .schedule-table .team-data {
display: flex;
align-items: center;
gap: 3px;
}
.schedule-section .team-img {
gap: 3px;
width: 215px;
}
.schedule-section .team-img img {
height: auto;
width: 20px;
background: inherit;
vertical-align: middle;
}
.schedule-section .winner {
font-weight: 600;
}
.tooltip-container {
display: inline-block;
position: relative;
}
.timezone-info-text {
font-size: 12px;
font-style: italic;
padding: 8px 16px;
color: #999999;
}
.utc-time-popover.popover-container.visible .popover-text {
width: 120px;
}
@media (max-width:768px) {
.schedule-section {
margin-top: 0;
}
.schedule-section .team-schedule-div {
overflow-y: auto;
margin: 12px 16px;
}
.schedule-section .schedule-date {
font-size: 12px;
font-weight: 600;
padding: 3px 16px;
}
.schedule-section .schedule-table.post th {
min-width: 100px;
}
.schedule-section .team-img {
width: auto;
}
.schedule-section .schedule-table.post th:first-child {
min-width: 160px;
}
.schedule-section .schedule-table.pre th:nth-child(1) {
width: 150px;
min-width: 150px;
max-width: 150px;
}
.schedule-section .schedule-table.pre th:nth-child(2) {
width: 90px;
min-width: 90px;
max-width: 90px;
}
.schedule-section .schedule-table.pre th:nth-child(3) {
width: 120px;
min-width: 120px;
max-width: 120px;
}
}
</style>
<style>
.popover-container {
display: inline-block;
position: relative;
}
.popover-container .popover-text {
display: none;
visibility: hidden;
}
.popover-container.visible .popover-text {
display: block;
visibility: initial;
position: fixed;
background: #858585;
padding: 8px;
width: max-content;
max-width: min(200px, 85vw);
font-weight: normal;
z-index: 99;
height: auto;
white-space: normal;
border-radius: 8px;
border: 1px solid #DFDFDF;
background: rgba(71, 71, 71, 0.90);
box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
color: #fff;
text-align: center;
font-size: 11px;
font-weight: 500;
line-height: 15.4px;
}
.popover-container .popover-cta {
cursor: pointer;
}
.popover-container .popover-cta.info {
color: #2d2d2d;
position: relative;
display: inline-block;
width: 16px;
height: 16px;
padding: 0;
border-radius: 50%;
text-align: center;
font-size: 14px;
cursor: pointer;
vertical-align: sub;
background-image: url("//staticg.sportskeeda.com/skm/assets/icons/ic-outline-info.svg");
background-repeat: no-repeat;
background-position: 50% 50%;
background-size: 16px;
}
</style>
<script type="text/javascript">
(function() {
function hideVisiblePopoversOnOutsideClick(e) {
if (e.target.className && e.target.className.includes("popover")) return;
hideVisiblePopovers();
}
function hideVisiblePopovers() {
var popoversVisible = $all(".popover-container.visible");
popoversVisible.forEach(function(popover) {
hidePopover(popover);
});
}
function hidePopover(popover) {
if (!popover) return;
removeClass(popover, "visible");
popover.removeAttribute("data-visible-at");
var textEle = popover.querySelector(".popover-text");
if (textEle) {
textEle.style.left = "unset";
textEle.style.right = "unset";
textEle.style.top = "unset";
}
}
function init () {
window.addEventListener("click", hideVisiblePopoversOnOutsideClick, { passive: true });
window.addEventListener("scroll", throttleFn(adjustPopoversPlacement, 10), { passive: true });
var popovers = $all(".popover-container");
popovers.forEach(function(popover) {
popover.onclick = function() {
hideVisiblePopovers();
var textEle = popover.querySelector(".popover-text");
if (hasClass(popover, "visible")) {
hidePopover(popover);
popover.removeAttribute("data-visible-at");
} else {
addClass(popover, "visible");
popover.setAttribute("data-visible-at", new Date().getTime());
setPopoverPlacement(popover, textEle);
}
}
});
}
document.addEventListener("DOMContentLoaded", function () {
window.addEventListener("custom:sk:popover:refresh", init);
init();
});
function setPopoverPlacement(parent, textEle) {
if (!textEle) return;
var parentRect = parent.getBoundingClientRect();
var rect = textEle.getBoundingClientRect();
// To follow parent's position respect to window size
textEle.style.left = (parentRect.left + parentRect.width + 4) + "px";
textEle.style.top = (parentRect.top + parentRect.height - (rect.height / 2)) + "px";
if ((rect.width + parentRect.left + parentRect.width) > window.innerWidth) {
textEle.style.left = "unset";
textEle.style.right = 0;
}
}
function adjustPopoversPlacement() {
var popover = $(".popover-container.visible");
if (!popover) return;
var textEle = popover.querySelector(".popover-text");
setPopoverPlacement(popover, textEle);
};
function autoCloseEligiblePopovers() {
var popoversVisible = $all(".popover-container.visible");
var now = new Date().getTime();
popoversVisible.forEach(function(popover) {
var popoverVisibleAt = Number(popover.getAttribute("data-visible-at"));
if ((now - popoverVisibleAt) > 4500) {
hidePopover(popover);
}
});
}
var interval = setInterval(autoCloseEligiblePopovers, 500);
})();
</script>
<div class="schedule-section">
<div class="schedule-date">Thursday, August 03, 2023</div>
<div class="team-schedule-div">
<div class="schedule-position-table">
<table class="schedule-table post">
<thead>
<tr>
<th title="Matchup" colspan="2">MATCHUP</th>
<th title="result">RESULT</th>
<th title="Hi Pass">HI PASS</th>
<th title="Hi Rush">HI RUSH</th>
<th title="Hi Rec">HI REC</th>
</tr>
</thead>
<tbody class="table-body">
<tr>
<td class="team-img">
<img height="20" width="20" alt="icon" src="//staticg.sportskeeda.com/nfl-images/new-york-jets.png?w=40" />
New York Jets
</a>
</td>
<td class="team-img">
<div class="team-data">
@
<img height="20" width="20" alt="icon" src="//staticg.sportskeeda.com/nfl-images/cleveland-browns.png?w=40" />
Cleveland Browns
</a>
</div>
</td>
<td>
<span class=" winner ">
CLE 21
</span>,
<span class>
NYJ 16
</span>
</td>
<td>
<span class="player-name">Kellen Mond</span>
92
</td>
<td>
<span class="player-name">Demetric Felton</span>
46
</td>
<td>
<span class="player-name">Malik Taylor</span>
57
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p class="timezone-info-text">All times are in ET. Tap on each match's time to view it in your local timezone.</p>
</div>
<script type="text/javascript">
function getMonthNames() {
return [
"January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December",
];
}
function getShortMonthNames() {
return [
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec",
];
}
function timeTo12HourFormat(time) {
var timeSplit = time.split(":");
var amOrPm = "AM";
var hour = timeSplit[0];
var minute = timeSplit[1];
if (hour >= 12) {
amOrPm = "PM";
}
if (hour > 12) {
hour = hour - 12;
}
return hour + ":" + minute + " " + amOrPm;
}
function getShortDayNames() {
return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
}
function getFullDayNames() {
return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
}
function getFormattedDate(isoDatetime) {
var currentDate = new Date();
var matchDate = new Date(isoDatetime);
var tomorrowDate = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
var monthNames = getShortMonthNames();
var dayNames = getShortDayNames();
var currentDateString = currentDate.getDate() + '-' + currentDate.getMonth() + '-' + currentDate.getFullYear();
var matchDateString = matchDate.getDate() + '-' + matchDate.getMonth() + '-' + matchDate.getFullYear();
var tomorrowDateString = tomorrowDate.getDate() + '-' + tomorrowDate.getMonth() + '-' + tomorrowDate.getFullYear();
var localTime = matchDate.toLocaleTimeString().replace(/\:\d\d\s/, " ");
var timeZone = matchDate.toString().match(/(\(.*\))/).pop();
return dayNames[matchDate.getDay()] + ", " + matchDate.getDate() + " " + monthNames[matchDate.getMonth()] + " " + matchDate.getFullYear() + ", " + localTime + " " +  timeZone;
}
function timeSince(isoDateString) {
var date = new Date(isoDateString);
var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var seconds = Math.floor((new Date() - date) / 1000);
var interval = Math.floor(seconds / 86400);
if(interval > 6) {
return date.getDate() + " " + monthNames[date.getMonth()] + ", " + date.getFullYear();
}
if (interval > 1) {
return interval + " days ago";
}
if(interval === 1) {
return "1 day ago";
}
interval = Math.floor(seconds / 3600);
if (interval === 1) {
return interval + " hr ago";
}
if (interval > 1) {
return interval + " hrs ago";
}
interval = Math.floor(seconds / 60);
if (interval === 1) {
return "1 min ago";
}
if (interval > 1) {
return interval + " mins ago";
}
return Math.floor(seconds) + " seconds ago";
}
function updateTimeStringsToFormatTimeSince() {
var isPendingContent = window.location.hash === '#pending';
var timeElements = $all('.keeda-time-since');
for (var i = 0; i < timeElements.length; i++) {
var isoDateString = timeElements[i].getAttribute('data-iso-string');
var timeSinceVal = timeSince(isoDateString);
if(timeElements[i].classList.contains("author-post-time") && !timeSinceVal.includes("ago")) {
timeElements[i].innerHTML = "";
} else if (isPendingContent) {
timeElements[i].innerHTML = (timeSinceVal + "<br>(" + isoDateString.split("T")[0] + ")");
} else {
timeElements[i].innerHTML = timeSinceVal;
}
}
}
function getDateObjectInIST() {
var currentTime = new Date();
var currentOffset = currentTime.getTimezoneOffset();
var ISTOffset = 330;   // IST offset UTC +5:30
var ISTTime = new Date(currentTime.getTime() + (ISTOffset + currentOffset) * 60000);
return ISTTime;
}
function getDateInYYYYMMDD(date) {
var d = !date ? getDateObjectInIST() : date;
var month = '' + (d.getMonth() + 1),
day = '' + d.getDate(),
year = d.getFullYear();
if (month.length < 2) month = '0' + month;
if (day.length < 2) day = '0' + day;
return year + "-" + month + "-" + day;
}
function getTimezoneOffsetString(theTime) {
var timezoneMap = {
"420": "PDT",
"360": "MDT",
"300": "CDT",
"240": "EDT",
"180": "GMT-3",
"0": "UTC",
"-60": "BST",
"-120": "CEST",
"-180": "MSK",
"-240": "GMT+4",
"-330": "IST",
"-480": "CST",
"-540": "JST",
"-600": "AEST",
"-720": "NZST"
};
return timezoneMap[theTime.getTimezoneOffset().toString()] || theTime.getTimezoneOffset().toString();
}
function getFriendlyModifiedTime(isoDateString) {
isoDateString = new Date(isoDateString);
var timeOffset = getTimezoneOffsetString(isoDateString);
var friendly_time = isoDateString.toLocaleString('en-US', {
day: 'numeric', 
year: 'numeric', 
month: 'long',
hour: 'numeric', 
minute: 'numeric', 
});
return friendly_time + ' ' + timeOffset;
}
function getAMPMFormattedTime(isoDateString) {
var hours = isoDateString.getHours();
var minutes = isoDateString.getMinutes();
var ampm = hours >= 12 ? 'pm' : 'am';
hours = hours % 12;
hours = hours ? hours : 12;
minutes = minutes < 10 ? '0'+minutes : minutes;
var strTime = hours + ':' + minutes + ' ' + ampm;
return strTime;
}
function getTimeDiffInDaysHoursMinutes(timeInMilliseconds) {
var diffDays = Math.floor(timeInMilliseconds / 86400000); // difference in days
var diffHrs = Math.floor((timeInMilliseconds % 86400000) / 3600000); // difference in hours
var diffMins = Math.round(((timeInMilliseconds % 86400000) % 3600000) / 60000); // difference in minutes
var result = [];
if (diffDays) {
result.push(diffDays + " day(s)");
}
if (diffHrs) {
result.push(diffHrs + " hour(s)");
}
if (diffMins) {
result.push(diffMins + " minute(s)");
}
if (!result.length) {
result.push(Math.round(timeInMilliseconds / 1000) + " second(s)");
}
return result;
}
function getTimeAndDate(isoDateString) {
var isoDateString = new Date(isoDateString);
var monthNames = getShortMonthNames();
var weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var hours = isoDateString.getHours();
if (hours <= 9) {
hours = "0" + hours;
}
var minutes = isoDateString.getMinutes();
if (minutes <= 9) {
minutes = "0" + minutes;
}
return hours + ":" + minutes + ", " + isoDateString.getDate() + " " + monthNames[isoDateString.getMonth()] + " " + isoDateString.getFullYear();
}
function getTimeAndDateFormatted(isoDateString) {
var isoDateString = new Date(isoDateString);
var monthNames = getShortMonthNames();
var weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var hours = isoDateString.getHours();
if (hours <= 9) {
hours = "0" + hours;
}
var minutes = isoDateString.getMinutes();
if (minutes <= 9) {
minutes = "0" + minutes;
}
return isoDateString.getDate() + " " + monthNames[isoDateString.getMonth()] + ", " + isoDateString.getFullYear() + " " + hours + ":" + minutes ;
}
function getFriendlyModifiedTimeWithoutTime(isoDateString) {
isoDateString = new Date(isoDateString);
var friendly_time = isoDateString.toLocaleString('en-US', {
day: 'numeric', 
year: 'numeric', 
month: 'short', 
});
return friendly_time;
}
function convertToETTimezone(date) {
return date.toLocaleString("en-US", {
timeZone: "America/New_York"
});
}
</script>
<script>
/*
* Date Format 1.2.3
* (c) 2007-2009 Steven Levithan <stevenlevithan.com>
* MIT license
*
* Includes enhancements by Scott Trenda <scott.trenda.net>
* and Kris Kowal <cixar.com/~kris.kowal/>
*
* Accepts a date, a mask, or a date and a mask.
* Returns a formatted version of the given date.
* The date defaults to the current date/time.
* The mask defaults to dateFormat.masks.default.
*/
(function() {
var dateFormat = function () {
var	token = /d{1,4}|D{3,4}|m{1,4}|M{3,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
timezoneClip = /[^-+\dA-Z]/g,
pad = function (val, len) {
val = String(val);
len = len || 2;
while (val.length < len) val = "0" + val;
return val;
};
// Regexes and supporting functions are cached through closure
return function (date, mask, utc) {
var dF = dateFormat;
// You can't provide utc if you skip other args (use the "UTC:" mask prefix)
if (arguments.length == 1 && Object.prototype.toString.call(date) == "[object String]" && !/\d/.test(date)) {
mask = date;
date = undefined;
}
// Passing date through Date applies Date.parse, if necessary
date = date ? new Date(date) : new Date;
if (isNaN(date)) throw SyntaxError("invalid date");
mask = String(dF.masks[mask] || mask || dF.masks["default"]);
// Allow setting the utc argument via the mask
if (mask.slice(0, 4) == "UTC:") {
mask = mask.slice(4);
utc = true;
}
var	_ = utc ? "getUTC" : "get",
d = date[_ + "Date"](),
D = date[_ + "Day"](),
m = date[_ + "Month"](),
y = date[_ + "FullYear"](),
H = date[_ + "Hours"](),
M = date[_ + "Minutes"](),
s = date[_ + "Seconds"](),
L = date[_ + "Milliseconds"](),
o = utc ? 0 : date.getTimezoneOffset(),
flags = {
d:    d,
dd:   pad(d),
ddd:  dF.i18n.dayNames[D],
DDD:  (dF.i18n.dayNames[D]).toUpperCase(),
dddd: dF.i18n.dayNames[D + 7],
DDDD: (dF.i18n.dayNames[D + 7]).toUpperCase(),
m:    m + 1,
mm:   pad(m + 1),
mmm:  dF.i18n.monthNames[m],
MMM:  (dF.i18n.monthNames[m]).toUpperCase(),
mmmm: dF.i18n.monthNames[m + 12],
MMMM: (dF.i18n.monthNames[m + 12]).toUpperCase(),
yy:   String(y).slice(2),
yyyy: y,
h:    H % 12 || 12,
hh:   pad(H % 12 || 12),
H:    H,
HH:   pad(H),
M:    M,
MM:   pad(M),
s:    s,
ss:   pad(s),
l:    pad(L, 3),
L:    pad(L > 99 ? Math.round(L / 10) : L),
t:    H < 12 ? "a"  : "p",
tt:   H < 12 ? "am" : "pm",
T:    H < 12 ? "A"  : "P",
TT:   H < 12 ? "AM" : "PM",
Z:    utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),
o:    (o > 0 ? "-" : "+") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
S:    ["th", "st", "nd", "rd"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]
};
return mask.replace(token, function ($0) {
return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);
});
};
}();
// Some common format strings
dateFormat.masks = {
"default":      "ddd mmm dd yyyy HH:MM:ss",
shortDate:      "m/d/yy",
mediumDate:     "mmm d, yyyy",
longDate:       "mmmm d, yyyy",
fullDate:       "dddd, mmmm d, yyyy",
shortTime:      "h:MM TT",
mediumTime:     "h:MM:ss TT",
longTime:       "h:MM:ss TT Z",
isoDate:        "yyyy-mm-dd",
isoTime:        "HH:MM:ss",
isoDateTime:    "yyyy-mm-dd'T'HH:MM:ss",
isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
};
// Internationalization strings
dateFormat.i18n = {
dayNames: [
"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat",
"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
],
monthNames: [
"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec",
"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"
]
};
// For convenience...
Date.prototype.format = function (mask, utc) {
return dateFormat(this, mask, utc);
};
})();
</script>
<script>
var $ = document.querySelector.bind(document);
var $all = document.querySelectorAll.bind(document);
var $id = document.getElementById.bind(document);
(function() {
var carouselContainer = "";
var carouselItemSelector = "";
if ($id("keeda_cricket_widget")) {
carouselContainer = $id("keeda_cricket_widget");
carouselItemSelector = ".keeda_cricket_single_match";
} else if ($id("keeda_football_widget")) {
carouselContainer = $id("keeda_football_widget");
carouselItemSelector = ".keeda_football_single_match";
} else if ($id("keeda_kabaddi_widget")) {
carouselContainer = $id("keeda_kabaddi_widget");
carouselItemSelector = ".keeda_cricket_single_match";
}
if (!carouselItemSelector) {
return;
}
var allScoreCarouselItems = $all(carouselItemSelector);
function init() {
allScoreCarouselItems.forEach(function(item) {
item.addEventListener("click", function(e) {
var closestAnchor = e.target.closest("a");
if (closestAnchor) {
var destinationUrl = closestAnchor.getAttribute("href");
trackGAEvent("SCORE_CAROUSEL_ITEM_CLICK", {
destination_url: destinationUrl
});
}
})
});
trackImpressionGAEventWhenInViewport({
element: carouselContainer,
identifier: "widget_sport_carousel",
eventName: "SCORE_CAROUSEL_IMPRESSION"
});
}
window.addEventListener("DOMContentLoaded", function() {
init();
});
})();
(function() {
var allViewMoreCtas = $all(".view-more-cta");
allViewMoreCtas.forEach(function(cta) {
cta.addEventListener("click", function(e) {
var clickedItem = e.target.closest("a.view-more-cta");
var section = clickedItem.dataset["section"];
var destinationUrl = clickedItem.getAttribute("href");
trackGAEvent("VIEW_MORE_CTA_CLICK", {
section: section,
destination_url: destinationUrl
});
})
});
})();
(function() {
function getFormattedDate(dateInstance, format) {
if (format && typeof Date.prototype.format == "function") {
return dateInstance.format(format);
}
return dateInstance.toLocaleDateString();
}
function init() {
var utcToLocalTimeCandidates = $all(".convert-utc-to-local");
utcToLocalTimeCandidates.forEach(function(dateItem) {
try {
var utcDateTime = dateItem.dataset["utcDateTime"];
var format = dateItem.dataset["format"];
var withUserFriendlyDay = dateItem.dataset["userFriendlyDay"] == "true";
var shouldOutputAsAttribute = dateItem.dataset["asAttribute"] == "true";
var outputAttributeName = dateItem.dataset["outputAttribute"];
if (utcDateTime) {
var localDate = new Date(utcDateTime);
var dateText = "";
if (withUserFriendlyDay) {
var toDateFormat = function(date) {
return [date.getFullYear(), date.getMonth(), date.getDate()].join("-");
}
var localDateFormatted = toDateFormat(localDate);
var today = new Date();
if (toDateFormat(today) == localDateFormatted) {
dateText = "Today";
} else {
var tomorrow = new Date(today);
tomorrow.setDate(today.getDate() + 1);
if (toDateFormat(tomorrow) == localDateFormatted) {
dateText = "Tomorrow";
} else {
dateText = getFormattedDate(localDate, format);
}
}
} else {
dateText = getFormattedDate(localDate, format);
}
if (shouldOutputAsAttribute && outputAttributeName) {
dateItem.setAttribute(outputAttributeName, dateText);
} else {
dateItem.innerText = dateText;
}
}
} catch (err) {
console.error(err);
}
});
}
init();
window.addEventListener("custom:sk:utils:refreshUtcToLocalTime", init);
})();
function NTernary(args) {
for (var i = 0; i < args.length; i++) {
if (args[i]) {
return args[i];
}
}
return false;
}
(function() {
var imageURLCache = {};
function loadImageIfExists(url, imgParams) {
var assetURL = [url, imgParams].join("");
return new Promise(function(resolve, reject) {
var img = new Image();
img.src = assetURL;
img.onload = function() {
resolve(img);
};
img.onerror = function() {
resolve(false);
}
});
}
async function initImg(imgElement) {
var fallbacks = imgElement.dataset["imgFallbacks"];
if (!fallbacks) return;
var imgParams = imgElement.dataset["imgParams"];
var urlsToTry = fallbacks.split("|:|:|");
for await (var url of urlsToTry) {
var urlWithParams = [url, imgParams].join("");
var cachedURL = imageURLCache[urlWithParams];
if (cachedURL) {
imgElement.setAttribute("src", cachedURL);
break;
}
var imageTag = await loadImageIfExists(url, imgParams);
if (imageTag) {
var attributes = imgElement.getAttributeNames();
for (var i = 0; i < attributes.length; i++) {
if (attributes[i] == "src") {
continue;
}
imageTag.setAttribute(attributes[i], imgElement.getAttribute(attributes[i]));
}
imageTag.removeAttribute("data-img-fallbacks");
imgElement.replaceWith(imageTag);
imageURLCache[urlWithParams] = imageTag.getAttribute("src");
break;
}
}
}
function init() {
var observer = new IntersectionObserver(function(entries) {
entries.forEach(function(entry) {
if (!entry.isIntersecting) return;
if (!entry.target) return;
removeClass(entry.target, "img-with-fallbacks");
observer.unobserve(entry.target);
initImg(entry.target);
});
}, {
threshold: 1,
rootMargin: "25% 0px 25% 0px",
});
$all(".img-with-fallbacks").forEach(function(imgElement) {
observer.observe(imgElement);
});
$all(".img-with-fallbacks-eager").forEach(function(imgElement) {
removeClass(imgElement, "img-with-fallbacks-eager");
initImg(imgElement);
});
}
window.addEventListener("DOMContentLoaded", init);
window.addEventListener("custom:sk:utils:lazyLoadAssetImages", init);
})();
(function() {
var playerBasePath = "//staticg.sportskeeda.com/skm/assets/player-images";
var teamBasePath = "//staticg.sportskeeda.com/skm/assets/team-logos";
function generatePathResolver(taxType, assetBasePath) {
return function(taxSlug, categorySlug, fallbackURLs, params) {
var urlsToTry = fallbackURLs.filter(Boolean);
var shouldUseAssetImage = false;
if (taxSlug) {
if (taxType == "player") {
if (["nfl", "college-football", "basketball"].includes(categorySlug)) {
shouldUseAssetImage = true;
}
} else if (taxType == "team") {
shouldUseAssetImage = true;
}
if (shouldUseAssetImage) {
urlsToTry.unshift([assetBasePath, categorySlug, [taxSlug, "png"].join(".")].join("/"));
}
}
urlsToTry = urlsToTry.map(function(url) {
if (params) {
url = url + params;
}
return url;
});
return urlsToTry.join("|:|:|");
}
}
window.generatePlayerAssetImage = generatePathResolver("player", playerBasePath);
window.generateTeamAssetImage = generatePathResolver("team", teamBasePath);
})();
</script>
</div>
</div>
</div>
</section>
</main>
<script>
function onDateButtonClick(e) {
var button = e.target;
var datePickerModal = $(".date-picker-modal");
if (button && button.classList.contains("active")) {
removeClass(button, "active");
addClass(datePickerModal, "hidden");
} else {
addClass(button, "active");
removeClass(datePickerModal, "hidden");
}
}
function onWeekEleClick(season, weekSlug) {
window.location.href = "/nfl/schedule/" + season + "/" + weekSlug;
}
var seasonYearToggle = (function() {
var currentYear = "2023";
var seasonEle = $("#date-picker");
document.body.addEventListener("click", function(event) {
if (!seasonEle.contains(event.target)) {
var modalEle = $("#date-picker-modal");
if (modalEle) {
removeClass($(".date-picker-buttton"), "active");
addClass(modalEle, "hidden");
}
}
});
function seasonYearToggle(season) {
var selected = $(".season-weeks-" + season);
if (!selected) {
return;
}
var containers = $all(".season-weeks")
for (var i=0; i<containers.length; i++) {
containers[i].classList.add("hidden");
}
removeClass(selected, "hidden");
}
return seasonYearToggle;
})();
</script>
<style>
.pfn-nfl-shared .nfl-schedule-wrapper {
--table-header-bg: #0857C3;
--table-header-color: #fff;
--subheader-bg: transparent;
--table-header-padding: 8px;
--bg-primary: #172b4d;
--font-color-primary: #fff;
--bg-secondary: #F5F6F8;
}
.pfn-nfl-shared .schedule-position-table {
overflow: auto;
}
.pfn-nfl-shared .schedule-position-table::-webkit-scrollbar-thumb {
background: #DFE1E6;
border-radius: 10px;
}
.pfn-nfl-shared .schedule-position-table::-webkit-scrollbar-thumb:hover {
background: #ccc;
}
.pfn-nfl-shared .schedule-section .schedule-table th {
padding: 4px 8px !important;
}
.pfn-nfl-shared .slider-container .slider-control {
display: unset;
}
.pfn-nfl-shared .nfl-schedule-weeks .date-picker-modal .year-name {
font-family: unset;
}
.pfn-nfl-shared .popover-container .popover-cta.info {
filter: brightness(0) saturate(100%) invert(100%) sepia(0%) saturate(0%) hue-rotate(324deg) brightness(101%) contrast(103%);
}
/* Desktop only */
@media screen and (min-width: 800px) {
.pfn-nfl-shared .schedule-position-table::-webkit-scrollbar {
height: 10px;
}
.pfn-nfl-shared .table-container::-webkit-scrollbar-thumb {
background: #DFE1E6;
border-radius: 10px;
}
.pfn-nfl-shared .table-container::-webkit-scrollbar-thumb:hover {
background: #ccc;
}
}
@media screen and (max-width: 768px) {
.pfn-text-content-container {
padding: 12px;
}
}
</style>
<div class="ad-content"></div>
<div class="pfn-text-content-container">
<h2>How Does the NFL Schedule Work?</h2>
<p>The NFL schedule determines who each team will face during the regular season of each NFL season. Across 18 weeks there are 272 NFL games that need scheduling while taking into account the availability of stadiums, international games, travel circumstances, and bye weeks. It's a mammoth task that has to work between the two conferences, eight divisions, and all thirty-two teams.</p>
<p>There is also a particular formula that has to be followed when deciding which opponents each NFL team will face.</p>
<p>The first thing that needs to be done is to decide on the list of opponents before they can be put together for the final schedule. The opponents that each team will face are decided by the following method:</p>
<ul>
<li><p>Six games against divisional teams.</p></li>
<li><p>Four against teams coming from one division in the same conference on a yearly rotation.</p></li>
<li><p>Four against teams from one division in the other conference – again on a yearly rotation.</p></li>
<li><p>Two games are against either of the other divisions within the same conference. These are played against teams that finished in the same position in their division the previous season. For example, if a team finished first in their division, they would play two teams from two divisions within their conference who also finished first.</p></li>
<li><p>The one last remaining game is played against an opponent from a division that hasn’t already appeared from the previous points. This game is again scheduled against a team that finished in the same position within their division.</p></li>
</ul>
<p>On top of this, there is a rotation system in place so every team has to play each other at least every four seasons. The NFL also deploys “flexible scheduling,”which allows for the best matchups to be placed in prime-time slots later in the season. </p>
<p>Teams know their opponents for the following season at the end of the existing season but don’t find out how they are scheduled until later in the year. The NFL tries to schedule their best matchups in prime slots - generally Thursday Night Football, Sunday Night Football, and Monday Night Football, although matchups are also scheduled for Thanksgiving and Christmas and games on a Saturday between Week 15 and 18.</p>
<p>NFL schedule release day has become a huge day in the NFL calendar, with games being teased and leaked in advance and teams making a huge deal with their announcements and videos going viral.</p>
<h2> How Many Weeks Is the Regular Season Schedule?</h2>
<p>There are 18 weeks in the NFL regular season. The opponents are decided using a certain method while the schedule of those opponents is decided by a mixture of a computer and a scheduling committee.</p>
<p>There are six games that are the same every year for each NFL team – their divisional games – games played against the three other teams in the team's own division both home and away.</p>
<h2>When Do NFL Bye Weeks Start?</h2>
<p>A bye week is a rest week for NFL teams, and they run from Week 5 to 14 during the NFL regular season. Every team gets one bye week per season, allowing a team time to rest and recuperate after the intensity of NFL games, affording players time to heal from injuries and giving coaches extra prep time to reevaluate game plans for the weeks ahead.</p>
<p>The amount of teams on byes in any given week ranges from two to six. The 2023 bye weeks are:</p>
<p>Week 5: Cleveland Browns, Los Angeles Chargers, Seattle Seahawks, Tampa Bay Buccaneers</p>
<p>Week 6: Green Bay Packers, Pittsburgh Steelers</p>
<p>Week 7: Carolina Panthers, Cincinnati Bengals, Dallas Cowboys, Houston Texans, New York Jets, Tennessee TItans</p>
<p>Week 9: Denver Broncos, Detroit Lions, Jacksonville Jaguars, San Francisco 49ers</p>
<p>Week 10: Kansas City Chiefs, Los Angeles Rams, Miami Dolphins, Philadelphia Eagles</p>
<p>Week 11: Atlanta Falcons, Indianapolis Colts, New England Patriots, New Orleans Saints</p>
<p>Week 13: Baltimore Ravens, Buffalo Bills, Chicago Bears, Las Vegas Raiders, Minnesota Vikings, New York Giants</p>
<p>Week 14: Arizona Cardinals, Washington Commanders</p>
<h2>When Do the NFL Playoffs Start?</h2>
<p>The 2023-2024 NFL Playoffs are due to start on January 13, 2024, starting with the Wild Card Round and ending in the Super Bowl in February. Two games will start on the Saturday of Wild Card Weekend, with the remaining four games being played on Sunday and Monday.</p>
<p>The playoffs then continue until the Super Bowl in Las Vegas.</p>
<h2>How Many Weeks Are the Playoffs?<h2>
<p>The NFL Playoffs are the NFL’s postseason event where fourteen teams, seven from each conference, progress from the NFL regular season. The NFL Playoffs last for four weeks, with teams facing off in elimination games in four different rounds. </p>
<p>The NFL Playoffs start with the Wild Card Round, where the No. 1 seed in each conference gets a bye. The winning teams progress to the Divisional Round, before moving to the Conference Championships and if they are so lucky, the Super Bowl.</p>
<h2>When Is the NFL Super Bowl?<h2>
<p>The 2023 NFL season ends with the Super Bowl on February 11, 2024. The game is played between the winner of the American Football Conference and the winner of the National Football Conference. </p>
<p>Super Bowl LVIII will take place on February 11, 2024 in Las Vegas, Nevada in Allegiant Stadium, home to the Las Vegas Raiders. The Super Bowl will be broadcast on CBS at the end of the 2023 season before starting a yearly rotation between CBS, FOX, NBC, and ESPN for the next eleven years.</p>
<h2>How Is the NFL Schedule Decided?<h2>
<p>The NFL schedule is decided by a supercomputer that takes into account huge amounts of data, creating thousands of outcomes and possibilities. With advancements in computer technology, the jobs of NFL committee members have gotten a lot easier. The data and rules are inputted into the software quickly along with decisions that have already been made by the scheduling committee. </p>
<p>The NFL schedulers may have already decided on games they want to show in prime-time slots and on holidays, as well as who will play in that season's international games. The computer builds thousands of potential schedules, with the schedulers slowly narrowing down possibilities until they get to their final decision.</p>
<p>When making their calculations the computer has to follow the strict protocol that has been set out, while also analyzing travel difficulties, potential international games, bye weeks, the availability of each NFL stadium, fan enjoyment, logistics, and many other intricate details.</p>
<p>The ultimate decision on the NFL schedule however, falls to six NFL executives. In 2023, they are:</p>
<p><strong>Michael North</strong> - Vice President of Broadcasting</p>
<p><strong>Howard Katz</strong> - Senior Vice President of Broadcasting</p>
<p><strong>Blake Jones</strong>- Senior Director of Broadcasting</p>
<p><strong>Charlotte Carey</strong> - Director of Broadcasting</p>
<p><strong>Onnie Bose</strong> - Vice President of Broadcasting</p>
<p><strong>Lucy Popko</strong>- Broadcasting Senior Coordinator</p>
<h2>How Long Is the NFL Offseason?<h2>
<p>The NFL offseason can last from 11 to 15 weeks depending on how far a team goes in the playoffs. Non-playoff teams get 15 weeks rest; those that go deep into the playoffs get less. At the end of those rest weeks, training camps start, which typically last six weeks prior to the start of the NFL season.</p>
<p>The NFL offseason encompasses free Agency, the NFL Combine, the NFL Draft, and the start of the new league year.</p>
</div>
</div>
<div class="right-sidebar-container">
<div class="tool-widget-container">
<style>
.tool-widget-container .container-header-text p,
.tool-widget-container .widget-header p,
.tool-widget-container .container-footer-text p {
font-family: sans-serif;
}
.tool-widget-container .widget-header {
padding: 10px;
}
.tool-widget-container .start-sit-tool-widget-wrapper {
border: 1px solid #2D2D2D;
}
.tool-widget-container .player-input,
.tool-widget-container .selected-player-container {
border-radius: 0px;
}
.tool-widget-container .start-optimization-btn {
border-radius: 74px;
background: #D32F2F;
}
</style>
<div class="pfn-nfl-tool-widget">
<style>
.start-sit-tool-widget-wrapper {
display: flex;
flex-direction: column;
width: 100%;
border-radius: 6px;
border: 1px solid #C0D0ED;
box-shadow: 0px 4px 4px 0px #E9F2FA;
position: relative;
}
.start-sit-tool-widget-wrapper .loading-overlay {
position: absolute;
}
.widget-header {
border-top-left-radius: 5px;
border-top-right-radius: 5px;
height: 38px;
background: #080A3C;
padding: 8px;
}
.widget-header p {
font-family: Poppins;
font-size: 14px;
font-weight: 600;
text-align: left;
color: #fff;
}
.players-input-container {
display: flex;
gap: 16px;
flex-wrap: wrap;
position: relative;
justify-content: center;
}
.player-input {
padding: 8px 16px;
color: #999;
font-size: 14px;
font-weight: 400;
border-radius: 29px;
border: 1px solid #e2e2e2;
background-color: #fff;
}
.players-input-container div.type-ahead-container {
border: 1px solid #e9e9e9;
border-radius: 6px;
min-height: 50px;
max-height: 200px;
overflow: hidden;
overflow-y: scroll;
position: absolute;
background: #fff;
box-shadow: -1px 6px 12px rgba(0, 0, 0, 0.1);
z-index: 2;
}
.loading-overlay {
position: fixed;
top: 0;
left: 0;
background: #000;
opacity: 0.5;
z-index: 20;
width: 100%;
height: 100%;
display: flex;
justify-content: center;
align-items: center;
}
.loading-overlay-text {
color: #fff;
font-weight: 700;
font-size: 44px;
line-height: 66px;
}
.hidden {
display: none;
}
.type-ahead-holder {
width: 100%;
display: flex;
flex-direction: column;
}
.player-not-found-text {
font-weight: 600;
font-size: 13px;
line-height: 19px;
color: #474747;
padding: 15px;
}
.player-details-holder {
width: 100%;
display: flex;
gap: 12px;
padding: 11px 22px;
cursor: pointer;
}
.player-details-holder:hover {
background-color: #F6F7FF;
}
.player-details-holder .player-name,
.player-details-holder .player-team,
.player-details-holder .player-position {
font-weight: 600;
font-size: 13px;
line-height: 19px;
}
.player-details-holder .player-name {
color: #474747;
width: 70%;
}
.player-details-holder .player-team,
.player-details-holder .player-position {
color: #999999;
width: 15%;
text-align: right;
}
.selected-player-container {
display: flex;
justify-content: space-between;
align-items: center;
padding: 2px 16px;
position: absolute;
background: #fff;
border-radius: 29px;
border: 1px solid #37C77A;
}
.selected-player-holder {
display: flex;
flex-direction: column;
align-items: flex-start;
}
.selected-player-name {
color: #2d2d2d;
font-weight: 400;
font-size: 12px;
line-height: 18px;
}
.selected-player-details-holder {
display: flex;
gap: 4px;
}
.selected-player-team,
.selected-player-position,
.separator {
color: #999999;
font-weight: 400;
font-size: 10px;
line-height: 15px;
}
.btn-clear {
padding: 0;
border: none;
background: #fff;
color: #999999;
font-weight: 400;
font-size: 12px;
line-height: 18px;
}
.btn-clear::after {
content: "\2715";
}
.selected-player-container {
width: calc(50% - 40px);
}
.start-optimization-btn {
border: none;
padding: 10px 16px;
display: flex;
justify-content: center;
align-items: center;
background: #37C77A;
border-radius: 6px;
width: 100%;
color: #fff;
cursor: pointer;
}
.btn-container {
display: flex;
justify-content: center;
}
.start-optimization-btn.disabled {
opacity: 0.5;
cursor: not-allowed;
}
.start-optimization-btn.disabled:hover {
cursor: not-allowed;
}
.container-header-text p {
font-family: Poppins;
font-size: 13px !important;
font-weight: 500;
letter-spacing: 0em;
text-align: left;
color: #2D2D2D;
}
.container-footer-text p {
padding: 0;
font-family: Poppins;
font-size: 12px !important;
font-style: italic;
font-weight: 600;
line-height: 18px;
letter-spacing: 0em;
text-align: right;
}
.widget-container {
padding: 0;
}
.players-input-container {
padding: 0px 12px;
}
.player-input {
width: calc(100% - 10px);
}
.container-header-text {
padding: 10px 16px;
}
.selected-player-container {
width: calc(100% - 30px);
}
.players-input-container div.type-ahead-container {
width: calc(100% - 30px);
}
.container-footer-text {
padding: 10px 2px 20px 2px;
}
.container-footer-text p {
padding: 0 12px !important;
}
.btn-container {
padding: 16px 16px 0px 16px;
}
.nfl-tool-widget .panel {
border: unset;
}
</style>
<div class="widget-container start-sit-widget-container disabled">
<div class="start-sit-tool-widget-wrapper">
<div class="widget-header">
<p>Who Should You Start In Divisional Round?</p>
</div>
<div class="container-header-text">
<p>Select Players for Comparison (At least 2)</p>
</div>
<div class="players-input-container">
<input class="start-sit-input player-input player1" type="text" placeholder="Player Name" />
<input class="start-sit-input player-input player2" type="text" placeholder="Player Name" />
<input class="start-sit-input player-input player3" type="text" placeholder="Player Name (optional)" />
<input class="start-sit-input player-input player4" type="text" placeholder="Player Name (optional)" data-last-input="true" />
</div>
<div class="btn-container">
<button class="start-optimization-btn disabled" disabled>View Results</button>
</div>
<div class="container-footer-text">
<p> PPR &#x2022; 4 Points Per Pass TD </p>
</div>
</div>
</div>
<script>
var optimizer = (function() {
const dataSourcePath = "assets/sheets/tools/start_sit_optimizer/data_for_tool.json";
const fileName = "//staticg.sportskeeda.com/"+dataSourcePath;
const assetsBaseUrl = fileName.replace("staticc.sp", "statics.sp").replace("staticg.sp", "statics.sp");
var trackGAEventForPage = function(eventName, eventParams) {
eventParams = eventParams || {};
trackGAEvent(eventName, Object.assign(eventParams, {
"tool": "start_sit_tool_widget"
}));
};
var playersList = [];
var state = {
scoringSystem: "PPR",
playersToStart: "1",
passScoring: "4 pt.",
selectedPlayers: [],
};
function segregatePlayerData(playersData, callback) {
var headers = playersData[0];
for (var i = 1; i < playersData.length; i++) {
var player = {};
for (var j = 0; j < headers.length; j++) {
player[headers[j]] = playersData[i][j];
}
playersList.push(player);
}
callback();
}
function getPlayersLists() {
var overlay = document.createElement("div");
addClass(overlay, "loading-overlay");
var loadingText = document.createElement("span");
addClass(loadingText, "loading-overlay-text");
loadingText.innerHTML = "Loading...";
overlay.appendChild(loadingText);
var toolWidgetWrapper = $('.start-sit-tool-widget-wrapper');
toolWidgetWrapper.appendChild(overlay);
var promiseList = [];
var promise = new Promise(function(resolve, reject) {
pureJSAjaxGet(assetsBaseUrl, function(response) {
successCallback(response, resolve);
}, reject, false);
});
promiseList.push(promise);
Promise.all(promiseList).then(function() {
var overlay = $('.start-sit-tool-widget-wrapper .loading-overlay');
if (overlay) {
addClass(overlay, "hidden");
}
}).catch(() => {
fetch(fileName)
.then(res => res.json())
.then(resJson => {
var overlay = $('.start-sit-tool-widget-wrapper .loading-overlay');
if (overlay) {
addClass(overlay, "hidden");
}
segregatePlayerData(resJson, enableToolWidget);
})
.catch(errorCallback);
});
}
function enableToolWidget() {
if (playersList.length) {
const widgetContainer = $(".start-sit-widget-container");
if (hasClass(widgetContainer, "disabled")) {
removeClass(widgetContainer, "disabled");
}
}
}
function successCallback(response, callback) {
var data = JSON.parse(response);
segregatePlayerData(data, enableToolWidget);
callback();
}
function errorCallback() {
console.error("Failed to load player details, please reload");
}
function getMatchingPlayersList(inputName) {
var inputName = inputName.toLowerCase();
var players = [];
for (var i = 0; i < playersList.length; i++) {
var playerName = playersList[i].Player.toLowerCase();
if (playerName.includes(inputName)) {
if (!playersList[i].selected || playersList[i].selected == "false") {
players.push(playersList[i]);
}
}
}
var pointsSelection = state.passScoring + " " + state.scoringSystem;
players.sort(function(a, b) {
return parseFloat(b[pointsSelection]) - parseFloat(a[pointsSelection]);
});
return players;
}
function showPlayerList(event) {
var parentTarget = event.target;
var inputName = event.target.value;
var players = "";
if (inputName) {
players = getMatchingPlayersList(inputName);
}
if (players.length) {
var playersListHolder = "";
var playersListContainer = $(".type-ahead-container");
if (playersListContainer) {
playersListHolder = $(".type-ahead-holder");
if (playersListHolder) {
playersListHolder.innerHTML = "";
}
} else {
playersListContainer = document.createElement("div");
addClass(playersListContainer, "type-ahead-container");
playersListHolder = document.createElement("div");
addClass(playersListHolder, "type-ahead-holder");
}
for (var i = 0; i < players.length; i++) {
var playerHolder = document.createElement("div");
addClass(playerHolder, "player-details-holder");
playerHolder.addEventListener("click", function(e) { selectPlayer(e, parentTarget) });
playerHolder.dataset.name = players[i].Player;
var playerName = document.createElement("span");
addClass(playerName, "player-name");
playerName.innerHTML = players[i].Player;
playerHolder.appendChild(playerName);
var playerTeam = document.createElement("span");
addClass(playerTeam, "player-team");
playerTeam.innerHTML = players[i].Team;
playerHolder.appendChild(playerTeam);
var playerPosition = document.createElement("span");
addClass(playerPosition, "player-position");
playerPosition.innerHTML = players[i].Position;
playerHolder.appendChild(playerPosition);
playersListHolder.appendChild(playerHolder);
}
playersListContainer.appendChild(playersListHolder);
event.target.parentElement.appendChild(playersListContainer);
var targetDimensions = event.target.getBoundingClientRect();
var parentDimensions = event.target.parentElement.getBoundingClientRect();
if (parentTarget.getAttribute("data-last-input")) {
playersListContainer.style.top = "-40px";
} else {
playersListContainer.style.top = (targetDimensions.top - parentDimensions.top +
targetDimensions
.height) +
2 + "px";
}
playersListContainer.style.left = (targetDimensions.left - parentDimensions.left) + "px";
} else {
var playersListContainer = $(".type-ahead-container");
if (playersListContainer) {
if (inputName == "") {
playersListContainer.remove();
return;
}
playersListHolder = playersListContainer.querySelector(".type-ahead-holder");
if (playersListHolder) {
var noPlayerFoundInfo = document.createElement("span");
addClass(noPlayerFoundInfo, "player-not-found-text");
noPlayerFoundInfo.innerHTML = "No Player Found";
playersListHolder.innerHTML = "";
playersListHolder.appendChild(noPlayerFoundInfo);
}
}
}
}
function selectPlayer(event, inputParent) {
inputParent.value = "";
var target = "";
if (event.target.classList.contains("player-details-holder")) {
target = event.target;
} else if (event.target.parentElement.classList.contains("player-details-holder")) {
target = event.target.parentElement;
}
var playerRank = parseFloat(target.dataset.rank);
var playerName = target.dataset.name;
var playerDetails = "";
for (var i = 0; i < playersList.length; i++) {
if (playersList[i].Player == playerName) {
playerDetails = playersList[i];
playersList[i].selected = "true";
break;
}
}
state.selectedPlayers.push(playerDetails);
var playersListContainer = $(".type-ahead-container");
if (playersListContainer) {
playersListContainer.remove();
}
var selectedPlayerContainer = document.createElement("div");
addClass(selectedPlayerContainer, "selected-player-container");
selectedPlayerContainer.dataset.name = playerDetails.Player;
var selectedPlayerHolder = document.createElement("div");
addClass(selectedPlayerHolder, "selected-player-holder");
selectedPlayerContainer.appendChild(selectedPlayerHolder);
var selectedPlayerName = document.createElement("span");
selectedPlayerName.innerHTML = playerDetails.Player;
addClass(selectedPlayerName, "selected-player-name");
selectedPlayerHolder.appendChild(selectedPlayerName);
var selectedPlayerDetailsHolder = document.createElement("div");
addClass(selectedPlayerDetailsHolder, "selected-player-details-holder");
selectedPlayerHolder.appendChild(selectedPlayerDetailsHolder);
var selectedPlayerTeam = document.createElement("span");
selectedPlayerTeam.innerHTML = playerDetails.Team;
addClass(selectedPlayerTeam, "selected-player-team");
selectedPlayerDetailsHolder.appendChild(selectedPlayerTeam);
var separator = document.createElement("span");
separator.innerHTML = "&bull;";
addClass(separator, "separator");
selectedPlayerDetailsHolder.appendChild(separator);
var selectedPlayerPosition = document.createElement("span");
selectedPlayerPosition.innerHTML = playerDetails.Position;
addClass(selectedPlayerPosition, "selected-player-position");
selectedPlayerDetailsHolder.appendChild(selectedPlayerPosition);
var clearButton = document.createElement("button");
addClass(clearButton, "btn-clear");
clearButton.addEventListener("click", removeSelectedPlayer);
selectedPlayerContainer.appendChild(clearButton);
var targetDimensions = inputParent.getBoundingClientRect();
var parentDimensions = inputParent.parentElement.getBoundingClientRect();
inputParent.parentElement.appendChild(selectedPlayerContainer);
selectedPlayerContainer.style.top = (targetDimensions.top - parentDimensions.top) + "px";
selectedPlayerContainer.style.left = (targetDimensions.left - parentDimensions.left) + "px";
if (state.selectedPlayers.length >= 2) {
var startOptimizerBtn = $(".start-optimization-btn");
if (hasClass(startOptimizerBtn, "disabled")) {
removeClass(startOptimizerBtn, "disabled");
}
if (startOptimizerBtn.hasAttribute("disabled")) {
startOptimizerBtn.removeAttribute("disabled");
}
}
}
function removeSelectedPlayer(event) {
var target = "";
if (event.target.classList.contains("selected-player-container")) {
target = event.target;
} else if (event.target.parentElement.classList.contains("selected-player-container")) {
target = event.target.parentElement;
}
var playerName = target.dataset.name;
for (var i = 0; i < playersList.length; i++) {
if (playersList[i].Player == playerName) {
playersList[i].selected = "false";
break;
}
}
for (var i = 0; i < state.selectedPlayers.length; i++) {
if (state.selectedPlayers[i].Player === playerName) {
state.selectedPlayers.splice(i, 1);
break;
}
}
if (state.selectedPlayers.length < 2) {
var startOptimizerBtn = $(".start-optimization-btn");
if (!hasClass(startOptimizerBtn, "disabled")) {
addClass(startOptimizerBtn, "disabled");
}
if (!startOptimizerBtn.hasAttribute("disabled")) {
startOptimizerBtn.setAttribute("disabled", "disabled");
}
}
target.remove();
}
function redirectToTool() {
selectedPlayersId = [];
trackGAEventForPage("view_results");
state.selectedPlayers.map(function(player) {
selectedPlayersId.push(player.Player);
});
selectedPlayersId = selectedPlayersId.join(',');
const encodedPlayerList = encodeURIComponent(selectedPlayersId);
let toolURLwithParams = "/who-should-i-start-fantasy-optimizer/?playerList=" + encodedPlayerList;
if("") {
toolURLwithParams = "https://www.profootballnetwork.com" + toolURLwithParams;
window.open(toolURLwithParams);
} else {
window.location.href = toolURLwithParams;
}
}
function init() {
$all(".start-sit-input.player-input").forEach(function(field) { field.addEventListener("input", showPlayerList); });
$(".start-optimization-btn").addEventListener("click", redirectToTool);
}
window.addEventListener("DOMContentLoaded", function() {
const container = $(".start-sit-widget-container");
trackImpressionGAEventWhenInViewport({
element: container,
identifier: "widget_start_sit_tool",
eventName: "START_SIT_TOOL_WIDGET_IMPRESSION",
delegateGAEvent: trackGAEventForPage
});
});
init();
getPlayersLists();
})();
</script>
</div>
</div>
<div class="right-sidebar"></div>
</div>
<div class="sticky-ad-container">
</div>
</div>
<script>
var _rollbarConfig = {
accessToken: "3dc8cbbe48364298bf4296c34daed8d5",
captureUncaught: true,
captureUnhandledRejections: true,
ignoredMessages: [
"ResizeObserver loop limit exceeded", 
"Script error", 
"object Event",
"The request is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.",
"The operation was aborted.",
],
payload: {
environment: "production",
person: {
id: getCurrentUserID(),
username: getCookie("fw_user_slug")
}
},
};
// Rollbar Snippet
!function(r){var e={};function o(n){if(e[n])return e[n].exports;var t=e[n]={i:n,l:!1,exports:{}};return r[n].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.m=r,o.c=e,o.d=function(r,e,n){o.o(r,e)||Object.defineProperty(r,e,{enumerable:!0,get:n})},o.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},o.t=function(r,e){if(1&e&&(r=o(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var t in r)o.d(n,t,function(e){return r[e]}.bind(null,t));return n},o.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return o.d(e,"a",e),e},o.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},o.p="",o(o.s=0)}([function(r,e,o){"use strict";var n=o(1),t=o(5);_rollbarConfig=_rollbarConfig||{},_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||"https://cdn.rollbar.com/rollbarjs/refs/tags/v2.26.2/rollbar.min.js",_rollbarConfig.async=void 0===_rollbarConfig.async||_rollbarConfig.async;var a=n.setupShim(window,_rollbarConfig),l=t(_rollbarConfig);window.rollbar=n.Rollbar,a.loadFull(window,document,!_rollbarConfig.async,_rollbarConfig,l)},function(r,e,o){"use strict";var n=o(2),t=o(3);function a(r){return function(){try{return r.apply(this,arguments)}catch(r){try{console.error("[Rollbar]: Internal error",r)}catch(r){}}}}var l=0;function i(r,e){this.options=r,this._rollbarOldOnError=null;var o=l++;this.shimId=function(){return o},"undefined"!=typeof window&&window._rollbarShims&&(window._rollbarShims[o]={handler:e,messages:[]})}var s=o(4),d=function(r,e){return new i(r,e)},c=function(r){return new s(d,r)};function u(r){return a((function(){var e=this,o=Array.prototype.slice.call(arguments,0),n={shim:e,method:r,args:o,ts:new Date};window._rollbarShims[this.shimId()].messages.push(n)}))}i.prototype.loadFull=function(r,e,o,n,t){var l=!1,i=e.createElement("script"),s=e.getElementsByTagName("script")[0],d=s.parentNode;i.crossOrigin="",i.src=n.rollbarJsUrl,o||(i.async=!0),i.onload=i.onreadystatechange=a((function(){if(!(l||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)){i.onload=i.onreadystatechange=null;try{d.removeChild(i)}catch(r){}l=!0,function(){var e;if(void 0===r._rollbarDidLoad){e=new Error("rollbar.js did not load");for(var o,n,a,l,i=0;o=r._rollbarShims[i++];)for(o=o.messages||[];n=o.shift();)for(a=n.args||[],i=0;i<a.length;++i)if("function"==typeof(l=a[i])){l(e);break}}"function"==typeof t&&t(e)}()}})),d.insertBefore(i,s)},i.prototype.wrap=function(r,e,o){try{var n;if(n="function"==typeof e?e:function(){return e||{}},"function"!=typeof r)return r;if(r._isWrap)return r;if(!r._rollbar_wrapped&&(r._rollbar_wrapped=function(){o&&"function"==typeof o&&o.apply(this,arguments);try{return r.apply(this,arguments)}catch(o){var e=o;throw e&&("string"==typeof e&&(e=new String(e)),e._rollbarContext=n()||{},e._rollbarContext._wrappedSource=r.toString(),window._rollbarWrappedError=e),e}},r._rollbar_wrapped._isWrap=!0,r.hasOwnProperty))for(var t in r)r.hasOwnProperty(t)&&(r._rollbar_wrapped[t]=r[t]);return r._rollbar_wrapped}catch(e){return r}};for(var p="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleAnonymousErrors,handleUnhandledRejection,captureEvent,captureDomContentLoaded,captureLoad".split(","),f=0;f<p.length;++f)i.prototype[p[f]]=u(p[f]);r.exports={setupShim:function(r,e){if(r){var o=e.globalAlias||"Rollbar";if("object"==typeof r[o])return r[o];r._rollbarShims={},r._rollbarWrappedError=null;var l=new c(e);return a((function(){e.captureUncaught&&(l._rollbarOldOnError=r.onerror,n.captureUncaughtExceptions(r,l,!0),e.wrapGlobalEventHandlers&&t(r,l,!0)),e.captureUnhandledRejections&&n.captureUnhandledRejections(r,l,!0);var a=e.autoInstrument;return!1!==e.enabled&&(void 0===a||!0===a||function(r){return!("object"!=typeof r||void 0!==r.page&&!r.page)}(a))&&r.addEventListener&&(r.addEventListener("load",l.captureLoad.bind(l)),r.addEventListener("DOMContentLoaded",l.captureDomContentLoaded.bind(l))),r[o]=l,l}))()}},Rollbar:c}},function(r,e,o){"use strict";function n(r,e,o,n){r._rollbarWrappedError&&(n[4]||(n[4]=r._rollbarWrappedError),n[5]||(n[5]=r._rollbarWrappedError._rollbarContext),r._rollbarWrappedError=null);var t=e.handleUncaughtException.apply(e,n);o&&o.apply(r,n),"anonymous"===t&&(e.anonymousErrorsPending+=1)}r.exports={captureUncaughtExceptions:function(r,e,o){if(r){var t;if("function"==typeof e._rollbarOldOnError)t=e._rollbarOldOnError;else if(r.onerror){for(t=r.onerror;t._rollbarOldOnError;)t=t._rollbarOldOnError;e._rollbarOldOnError=t}e.handleAnonymousErrors();var a=function(){var o=Array.prototype.slice.call(arguments,0);n(r,e,t,o)};o&&(a._rollbarOldOnError=t),r.onerror=a}},captureUnhandledRejections:function(r,e,o){if(r){"function"==typeof r._rollbarURH&&r._rollbarURH.belongsToShim&&r.removeEventListener("unhandledrejection",r._rollbarURH);var n=function(r){var o,n,t;try{o=r.reason}catch(r){o=void 0}try{n=r.promise}catch(r){n="[unhandledrejection] error getting `promise` from event"}try{t=r.detail,!o&&t&&(o=t.reason,n=t.promise)}catch(r){}o||(o="[unhandledrejection] error getting `reason` from event"),e&&e.handleUnhandledRejection&&e.handleUnhandledRejection(o,n)};n.belongsToShim=o,r._rollbarURH=n,r.addEventListener("unhandledrejection",n)}}}},function(r,e,o){"use strict";function n(r,e,o){if(e.hasOwnProperty&&e.hasOwnProperty("addEventListener")){for(var n=e.addEventListener;n._rollbarOldAdd&&n.belongsToShim;)n=n._rollbarOldAdd;var t=function(e,o,t){n.call(this,e,r.wrap(o),t)};t._rollbarOldAdd=n,t.belongsToShim=o,e.addEventListener=t;for(var a=e.removeEventListener;a._rollbarOldRemove&&a.belongsToShim;)a=a._rollbarOldRemove;var l=function(r,e,o){a.call(this,r,e&&e._rollbar_wrapped||e,o)};l._rollbarOldRemove=a,l.belongsToShim=o,e.removeEventListener=l}}r.exports=function(r,e,o){if(r){var t,a,l="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(t=0;t<l.length;++t)r[a=l[t]]&&r[a].prototype&&n(e,r[a].prototype,o)}}},function(r,e,o){"use strict";function n(r,e){this.impl=r(e,this),this.options=e,function(r){for(var e=function(r){return function(){var e=Array.prototype.slice.call(arguments,0);if(this.impl[r])return this.impl[r].apply(this.impl,e)}},o="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleAnonymousErrors,handleUnhandledRejection,_createItem,wrap,loadFull,shimId,captureEvent,captureDomContentLoaded,captureLoad".split(","),n=0;n<o.length;n++)r[o[n]]=e(o[n])}(n.prototype)}n.prototype._swapAndProcessMessages=function(r,e){var o,n,t;for(this.impl=r(this.options);o=e.shift();)n=o.method,t=o.args,this[n]&&"function"==typeof this[n]&&("captureDomContentLoaded"===n||"captureLoad"===n?this[n].apply(this,[t[0],o.ts]):this[n].apply(this,t));return this},r.exports=n},function(r,e,o){"use strict";r.exports=function(r){return function(e){if(!e&&!window._rollbarInitialized){for(var o,n,t=(r=r||{}).globalAlias||"Rollbar",a=window.rollbar,l=function(r){return new a(r)},i=0;o=window._rollbarShims[i++];)n||(n=o.handler),o.handler._swapAndProcessMessages(l,o.messages);window[t]=n,window._rollbarInitialized=!0}}}}]);
Rollbar.configure({
hostSafeList: ['sportskeeda.com', 'profootballnetwork.com']
});
// End Rollbar Snippet
</script>
<script type="text/javascript">
(function() {
/** CONFIGURATION START **/
var _sf_async_config = window._sf_async_config = (window._sf_async_config || {});
_sf_async_config.uid = 66391;
_sf_async_config.domain = 'profootballnetwork.com';
_sf_async_config.useCanonical = true;
_sf_async_config.useCanonicalDomain = true;
_sf_async_config.authors = '';
_sf_async_config.sections = '';
/** CONFIGURATION END **/
function loadChartbeat() {
var e = document.createElement('script');
var n = document.getElementsByTagName('script')[0];
e.type = 'text/javascript';
e.async = true;
e.src = '//static.chartbeat.com/js/chartbeat.js';
n.parentNode.insertBefore(e, n);
}
loadChartbeat();
})();
</script>
<script>
(function() {
var utcToLocalTimeCandidates = $all(".convert-utc-to-local");
function getFormattedDate(dateInstance, format) {
if (format && typeof Date.prototype.format == "function") {
return dateInstance.format(format);
}
return dateInstance.toLocaleDateString();
}
function expandPageTopTextContent() {
var topTextContainer = $(".pfn-content-container .top-text-content-container");
if (topTextContainer) {
topTextContainer.style.height = "unset";
var readMoreBtn = topTextContainer.querySelector(".read-more-content-btn");
if (readMoreBtn) {
addClass(readMoreBtn, "hidden");
}
var readLessBtn = topTextContainer.querySelector(".read-less-content-btn");
if (readLessBtn) {
removeClass(readLessBtn, "hidden");
}
}
}
function shrinkPageTopTextContent() {
var topTextContainer = $(".pfn-content-container .top-text-content-container");
if (topTextContainer) {
topTextContainer.style.height = "116px";
var readMoreBtn = topTextContainer.querySelector(".read-more-content-btn");
if (readMoreBtn) {
removeClass(readMoreBtn, "hidden");
}
var readLessBtn = topTextContainer.querySelector(".read-less-content-btn");
if (readLessBtn) {
addClass(readLessBtn, "hidden");
}
}
}
function init() {
utcToLocalTimeCandidates.forEach(function(dateItem) {
try {
var utcDateTime = dateItem.dataset["utcDateTime"];
var format = dateItem.dataset["format"];
if (utcDateTime) {
var localDate = new Date(utcDateTime);
dateItem.innerText = getFormattedDate(localDate, format);
}
} catch (err) {
console.error(err);
}
});
var topTextContainer = $(".pfn-content-container .top-text-content-container");
if (topTextContainer) {
var readMoreBtn = topTextContainer.querySelector(".read-more-content-btn");
if (readMoreBtn) {
readMoreBtn.addEventListener("click", expandPageTopTextContent);
}
var readLessBtn = topTextContainer.querySelector(".read-less-content-btn");
if (readLessBtn) {
readLessBtn.addEventListener("click", shrinkPageTopTextContent);
}
}
}
init();
})();
</script>
</main>
<div id="taboola-newsroom"></div>
<script type="text/javascript">
window._taboola = window._taboola || [];
_taboola.push({
mode: 'rbox-tracking',
container: 'taboola-newsroom',
placement: 'Newsroom',
});
</script>
<script type="text/javascript">
window._taboola = window._taboola || [];
_taboola.push({
flush: true
});
</script>
</body>
</html>
 contentType 24 text/html; charset=utf-8 url 51 https://www.profootballnetwork.com:443/nfl/schedule responseCode 3 200 